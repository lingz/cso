
bomb:     file format elf32-i386


Disassembly of section .init:

08048770 <_init>:
 8048770:	53                   	push   %ebx
 8048771:	83 ec 08             	sub    $0x8,%esp
 8048774:	e8 00 00 00 00       	call   8048779 <_init+0x9>
 8048779:	5b                   	pop    %ebx
 804877a:	81 c3 7b 38 00 00    	add    $0x387b,%ebx
 8048780:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048786:	85 c0                	test   %eax,%eax
 8048788:	74 05                	je     804878f <_init+0x1f>
 804878a:	e8 f1 00 00 00       	call   8048880 <__gmon_start__@plt>
 804878f:	e8 8c 02 00 00       	call   8048a20 <frame_dummy>
 8048794:	e8 17 1b 00 00       	call   804a2b0 <__do_global_ctors_aux>
 8048799:	83 c4 08             	add    $0x8,%esp
 804879c:	5b                   	pop    %ebx
 804879d:	c3                   	ret    

Disassembly of section .plt:

080487a0 <read@plt-0x10>:
 80487a0:	ff 35 f8 bf 04 08    	pushl  0x804bff8
 80487a6:	ff 25 fc bf 04 08    	jmp    *0x804bffc
 80487ac:	00 00                	add    %al,(%eax)
	...

080487b0 <read@plt>:
 80487b0:	ff 25 00 c0 04 08    	jmp    *0x804c000
 80487b6:	68 00 00 00 00       	push   $0x0
 80487bb:	e9 e0 ff ff ff       	jmp    80487a0 <_init+0x30>

080487c0 <fflush@plt>:
 80487c0:	ff 25 04 c0 04 08    	jmp    *0x804c004
 80487c6:	68 08 00 00 00       	push   $0x8
 80487cb:	e9 d0 ff ff ff       	jmp    80487a0 <_init+0x30>

080487d0 <fgets@plt>:
 80487d0:	ff 25 08 c0 04 08    	jmp    *0x804c008
 80487d6:	68 10 00 00 00       	push   $0x10
 80487db:	e9 c0 ff ff ff       	jmp    80487a0 <_init+0x30>

080487e0 <signal@plt>:
 80487e0:	ff 25 0c c0 04 08    	jmp    *0x804c00c
 80487e6:	68 18 00 00 00       	push   $0x18
 80487eb:	e9 b0 ff ff ff       	jmp    80487a0 <_init+0x30>

080487f0 <sleep@plt>:
 80487f0:	ff 25 10 c0 04 08    	jmp    *0x804c010
 80487f6:	68 20 00 00 00       	push   $0x20
 80487fb:	e9 a0 ff ff ff       	jmp    80487a0 <_init+0x30>

08048800 <alarm@plt>:
 8048800:	ff 25 14 c0 04 08    	jmp    *0x804c014
 8048806:	68 28 00 00 00       	push   $0x28
 804880b:	e9 90 ff ff ff       	jmp    80487a0 <_init+0x30>

08048810 <__stack_chk_fail@plt>:
 8048810:	ff 25 18 c0 04 08    	jmp    *0x804c018
 8048816:	68 30 00 00 00       	push   $0x30
 804881b:	e9 80 ff ff ff       	jmp    80487a0 <_init+0x30>

08048820 <strcpy@plt>:
 8048820:	ff 25 1c c0 04 08    	jmp    *0x804c01c
 8048826:	68 38 00 00 00       	push   $0x38
 804882b:	e9 70 ff ff ff       	jmp    80487a0 <_init+0x30>

08048830 <gethostname@plt>:
 8048830:	ff 25 20 c0 04 08    	jmp    *0x804c020
 8048836:	68 40 00 00 00       	push   $0x40
 804883b:	e9 60 ff ff ff       	jmp    80487a0 <_init+0x30>

08048840 <getenv@plt>:
 8048840:	ff 25 24 c0 04 08    	jmp    *0x804c024
 8048846:	68 48 00 00 00       	push   $0x48
 804884b:	e9 50 ff ff ff       	jmp    80487a0 <_init+0x30>

08048850 <puts@plt>:
 8048850:	ff 25 28 c0 04 08    	jmp    *0x804c028
 8048856:	68 50 00 00 00       	push   $0x50
 804885b:	e9 40 ff ff ff       	jmp    80487a0 <_init+0x30>

08048860 <__memmove_chk@plt>:
 8048860:	ff 25 2c c0 04 08    	jmp    *0x804c02c
 8048866:	68 58 00 00 00       	push   $0x58
 804886b:	e9 30 ff ff ff       	jmp    80487a0 <_init+0x30>

08048870 <__memcpy_chk@plt>:
 8048870:	ff 25 30 c0 04 08    	jmp    *0x804c030
 8048876:	68 60 00 00 00       	push   $0x60
 804887b:	e9 20 ff ff ff       	jmp    80487a0 <_init+0x30>

08048880 <__gmon_start__@plt>:
 8048880:	ff 25 34 c0 04 08    	jmp    *0x804c034
 8048886:	68 68 00 00 00       	push   $0x68
 804888b:	e9 10 ff ff ff       	jmp    80487a0 <_init+0x30>

08048890 <exit@plt>:
 8048890:	ff 25 38 c0 04 08    	jmp    *0x804c038
 8048896:	68 70 00 00 00       	push   $0x70
 804889b:	e9 00 ff ff ff       	jmp    80487a0 <_init+0x30>

080488a0 <__libc_start_main@plt>:
 80488a0:	ff 25 3c c0 04 08    	jmp    *0x804c03c
 80488a6:	68 78 00 00 00       	push   $0x78
 80488ab:	e9 f0 fe ff ff       	jmp    80487a0 <_init+0x30>

080488b0 <write@plt>:
 80488b0:	ff 25 40 c0 04 08    	jmp    *0x804c040
 80488b6:	68 80 00 00 00       	push   $0x80
 80488bb:	e9 e0 fe ff ff       	jmp    80487a0 <_init+0x30>

080488c0 <strcasecmp@plt>:
 80488c0:	ff 25 44 c0 04 08    	jmp    *0x804c044
 80488c6:	68 88 00 00 00       	push   $0x88
 80488cb:	e9 d0 fe ff ff       	jmp    80487a0 <_init+0x30>

080488d0 <__isoc99_sscanf@plt>:
 80488d0:	ff 25 48 c0 04 08    	jmp    *0x804c048
 80488d6:	68 90 00 00 00       	push   $0x90
 80488db:	e9 c0 fe ff ff       	jmp    80487a0 <_init+0x30>

080488e0 <fopen@plt>:
 80488e0:	ff 25 4c c0 04 08    	jmp    *0x804c04c
 80488e6:	68 98 00 00 00       	push   $0x98
 80488eb:	e9 b0 fe ff ff       	jmp    80487a0 <_init+0x30>

080488f0 <__errno_location@plt>:
 80488f0:	ff 25 50 c0 04 08    	jmp    *0x804c050
 80488f6:	68 a0 00 00 00       	push   $0xa0
 80488fb:	e9 a0 fe ff ff       	jmp    80487a0 <_init+0x30>

08048900 <__printf_chk@plt>:
 8048900:	ff 25 54 c0 04 08    	jmp    *0x804c054
 8048906:	68 a8 00 00 00       	push   $0xa8
 804890b:	e9 90 fe ff ff       	jmp    80487a0 <_init+0x30>

08048910 <socket@plt>:
 8048910:	ff 25 58 c0 04 08    	jmp    *0x804c058
 8048916:	68 b0 00 00 00       	push   $0xb0
 804891b:	e9 80 fe ff ff       	jmp    80487a0 <_init+0x30>

08048920 <__fprintf_chk@plt>:
 8048920:	ff 25 5c c0 04 08    	jmp    *0x804c05c
 8048926:	68 b8 00 00 00       	push   $0xb8
 804892b:	e9 70 fe ff ff       	jmp    80487a0 <_init+0x30>

08048930 <gethostbyname@plt>:
 8048930:	ff 25 60 c0 04 08    	jmp    *0x804c060
 8048936:	68 c0 00 00 00       	push   $0xc0
 804893b:	e9 60 fe ff ff       	jmp    80487a0 <_init+0x30>

08048940 <strtol@plt>:
 8048940:	ff 25 64 c0 04 08    	jmp    *0x804c064
 8048946:	68 c8 00 00 00       	push   $0xc8
 804894b:	e9 50 fe ff ff       	jmp    80487a0 <_init+0x30>

08048950 <connect@plt>:
 8048950:	ff 25 68 c0 04 08    	jmp    *0x804c068
 8048956:	68 d0 00 00 00       	push   $0xd0
 804895b:	e9 40 fe ff ff       	jmp    80487a0 <_init+0x30>

08048960 <close@plt>:
 8048960:	ff 25 6c c0 04 08    	jmp    *0x804c06c
 8048966:	68 d8 00 00 00       	push   $0xd8
 804896b:	e9 30 fe ff ff       	jmp    80487a0 <_init+0x30>

08048970 <__ctype_b_loc@plt>:
 8048970:	ff 25 70 c0 04 08    	jmp    *0x804c070
 8048976:	68 e0 00 00 00       	push   $0xe0
 804897b:	e9 20 fe ff ff       	jmp    80487a0 <_init+0x30>

08048980 <__sprintf_chk@plt>:
 8048980:	ff 25 74 c0 04 08    	jmp    *0x804c074
 8048986:	68 e8 00 00 00       	push   $0xe8
 804898b:	e9 10 fe ff ff       	jmp    80487a0 <_init+0x30>

Disassembly of section .text:

08048990 <_start>:
 8048990:	31 ed                	xor    %ebp,%ebp
 8048992:	5e                   	pop    %esi
 8048993:	89 e1                	mov    %esp,%ecx
 8048995:	83 e4 f0             	and    $0xfffffff0,%esp
 8048998:	50                   	push   %eax
 8048999:	54                   	push   %esp
 804899a:	52                   	push   %edx
 804899b:	68 a0 a2 04 08       	push   $0x804a2a0
 80489a0:	68 30 a2 04 08       	push   $0x804a230
 80489a5:	51                   	push   %ecx
 80489a6:	56                   	push   %esi
 80489a7:	68 44 8a 04 08       	push   $0x8048a44
 80489ac:	e8 ef fe ff ff       	call   80488a0 <__libc_start_main@plt>
 80489b1:	f4                   	hlt    
 80489b2:	90                   	nop
 80489b3:	90                   	nop
 80489b4:	90                   	nop
 80489b5:	90                   	nop
 80489b6:	90                   	nop
 80489b7:	90                   	nop
 80489b8:	90                   	nop
 80489b9:	90                   	nop
 80489ba:	90                   	nop
 80489bb:	90                   	nop
 80489bc:	90                   	nop
 80489bd:	90                   	nop
 80489be:	90                   	nop
 80489bf:	90                   	nop

080489c0 <__do_global_dtors_aux>:
 80489c0:	55                   	push   %ebp
 80489c1:	89 e5                	mov    %esp,%ebp
 80489c3:	53                   	push   %ebx
 80489c4:	83 ec 04             	sub    $0x4,%esp
 80489c7:	80 3d e4 c7 04 08 00 	cmpb   $0x0,0x804c7e4
 80489ce:	75 3f                	jne    8048a0f <__do_global_dtors_aux+0x4f>
 80489d0:	a1 e8 c7 04 08       	mov    0x804c7e8,%eax
 80489d5:	bb 20 bf 04 08       	mov    $0x804bf20,%ebx
 80489da:	81 eb 1c bf 04 08    	sub    $0x804bf1c,%ebx
 80489e0:	c1 fb 02             	sar    $0x2,%ebx
 80489e3:	83 eb 01             	sub    $0x1,%ebx
 80489e6:	39 d8                	cmp    %ebx,%eax
 80489e8:	73 1e                	jae    8048a08 <__do_global_dtors_aux+0x48>
 80489ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80489f0:	83 c0 01             	add    $0x1,%eax
 80489f3:	a3 e8 c7 04 08       	mov    %eax,0x804c7e8
 80489f8:	ff 14 85 1c bf 04 08 	call   *0x804bf1c(,%eax,4)
 80489ff:	a1 e8 c7 04 08       	mov    0x804c7e8,%eax
 8048a04:	39 d8                	cmp    %ebx,%eax
 8048a06:	72 e8                	jb     80489f0 <__do_global_dtors_aux+0x30>
 8048a08:	c6 05 e4 c7 04 08 01 	movb   $0x1,0x804c7e4
 8048a0f:	83 c4 04             	add    $0x4,%esp
 8048a12:	5b                   	pop    %ebx
 8048a13:	5d                   	pop    %ebp
 8048a14:	c3                   	ret    
 8048a15:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048a19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048a20 <frame_dummy>:
 8048a20:	55                   	push   %ebp
 8048a21:	89 e5                	mov    %esp,%ebp
 8048a23:	83 ec 18             	sub    $0x18,%esp
 8048a26:	a1 24 bf 04 08       	mov    0x804bf24,%eax
 8048a2b:	85 c0                	test   %eax,%eax
 8048a2d:	74 12                	je     8048a41 <frame_dummy+0x21>
 8048a2f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048a34:	85 c0                	test   %eax,%eax
 8048a36:	74 09                	je     8048a41 <frame_dummy+0x21>
 8048a38:	c7 04 24 24 bf 04 08 	movl   $0x804bf24,(%esp)
 8048a3f:	ff d0                	call   *%eax
 8048a41:	c9                   	leave  
 8048a42:	c3                   	ret    
 8048a43:	90                   	nop

08048a44 <main>:
 8048a44:	55                   	push   %ebp
 8048a45:	89 e5                	mov    %esp,%ebp
 8048a47:	53                   	push   %ebx
 8048a48:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a4b:	83 ec 10             	sub    $0x10,%esp
 8048a4e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048a51:	8b 5d 0c             	mov    0xc(%ebp),%ebx
 8048a54:	83 f8 01             	cmp    $0x1,%eax
 8048a57:	75 0c                	jne    8048a65 <main+0x21>
 8048a59:	a1 c4 c7 04 08       	mov    0x804c7c4,%eax
 8048a5e:	a3 f0 c7 04 08       	mov    %eax,0x804c7f0
 8048a63:	eb 74                	jmp    8048ad9 <main+0x95>
 8048a65:	83 f8 02             	cmp    $0x2,%eax
 8048a68:	75 49                	jne    8048ab3 <main+0x6f>
 8048a6a:	c7 44 24 04 00 a3 04 	movl   $0x804a300,0x4(%esp)
 8048a71:	08 
 8048a72:	8b 43 04             	mov    0x4(%ebx),%eax
 8048a75:	89 04 24             	mov    %eax,(%esp)
 8048a78:	e8 63 fe ff ff       	call   80488e0 <fopen@plt>
 8048a7d:	a3 f0 c7 04 08       	mov    %eax,0x804c7f0
 8048a82:	85 c0                	test   %eax,%eax
 8048a84:	75 53                	jne    8048ad9 <main+0x95>
 8048a86:	8b 43 04             	mov    0x4(%ebx),%eax
 8048a89:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048a8d:	8b 03                	mov    (%ebx),%eax
 8048a8f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a93:	c7 44 24 04 02 a3 04 	movl   $0x804a302,0x4(%esp)
 8048a9a:	08 
 8048a9b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048aa2:	e8 59 fe ff ff       	call   8048900 <__printf_chk@plt>
 8048aa7:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048aae:	e8 dd fd ff ff       	call   8048890 <exit@plt>
 8048ab3:	8b 03                	mov    (%ebx),%eax
 8048ab5:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048ab9:	c7 44 24 04 1f a3 04 	movl   $0x804a31f,0x4(%esp)
 8048ac0:	08 
 8048ac1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048ac8:	e8 33 fe ff ff       	call   8048900 <__printf_chk@plt>
 8048acd:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8048ad4:	e8 b7 fd ff ff       	call   8048890 <exit@plt>
 8048ad9:	e8 ed 05 00 00       	call   80490cb <initialize_bomb>
 8048ade:	c7 04 24 84 a3 04 08 	movl   $0x804a384,(%esp)
 8048ae5:	e8 66 fd ff ff       	call   8048850 <puts@plt>
 8048aea:	c7 04 24 c0 a3 04 08 	movl   $0x804a3c0,(%esp)
 8048af1:	e8 5a fd ff ff       	call   8048850 <puts@plt>
 8048af6:	e8 a0 08 00 00       	call   804939b <read_line>
 8048afb:	89 04 24             	mov    %eax,(%esp)
 8048afe:	e8 ad 00 00 00       	call   8048bb0 <phase_1>
 8048b03:	e8 f1 09 00 00       	call   80494f9 <phase_defused>
 8048b08:	c7 04 24 ec a3 04 08 	movl   $0x804a3ec,(%esp)
 8048b0f:	e8 3c fd ff ff       	call   8048850 <puts@plt>
 8048b14:	e8 82 08 00 00       	call   804939b <read_line>
 8048b19:	89 04 24             	mov    %eax,(%esp)
 8048b1c:	e8 b3 00 00 00       	call   8048bd4 <phase_2>
 8048b21:	e8 d3 09 00 00       	call   80494f9 <phase_defused>
 8048b26:	c7 04 24 39 a3 04 08 	movl   $0x804a339,(%esp)
 8048b2d:	e8 1e fd ff ff       	call   8048850 <puts@plt>
 8048b32:	e8 64 08 00 00       	call   804939b <read_line>
 8048b37:	89 04 24             	mov    %eax,(%esp)
 8048b3a:	e8 dc 00 00 00       	call   8048c1b <phase_3>
 8048b3f:	e8 b5 09 00 00       	call   80494f9 <phase_defused>
 8048b44:	c7 04 24 57 a3 04 08 	movl   $0x804a357,(%esp)
 8048b4b:	e8 00 fd ff ff       	call   8048850 <puts@plt>
 8048b50:	e8 46 08 00 00       	call   804939b <read_line>
 8048b55:	89 04 24             	mov    %eax,(%esp)
 8048b58:	e8 d9 01 00 00       	call   8048d36 <phase_4>
 8048b5d:	e8 97 09 00 00       	call   80494f9 <phase_defused>
 8048b62:	c7 04 24 18 a4 04 08 	movl   $0x804a418,(%esp)
 8048b69:	e8 e2 fc ff ff       	call   8048850 <puts@plt>
 8048b6e:	e8 28 08 00 00       	call   804939b <read_line>
 8048b73:	89 04 24             	mov    %eax,(%esp)
 8048b76:	e8 1d 02 00 00       	call   8048d98 <phase_5>
 8048b7b:	e8 79 09 00 00       	call   80494f9 <phase_defused>
 8048b80:	c7 04 24 66 a3 04 08 	movl   $0x804a366,(%esp)
 8048b87:	e8 c4 fc ff ff       	call   8048850 <puts@plt>
 8048b8c:	e8 0a 08 00 00       	call   804939b <read_line>
 8048b91:	89 04 24             	mov    %eax,(%esp)
 8048b94:	e8 81 02 00 00       	call   8048e1a <phase_6>
 8048b99:	e8 5b 09 00 00       	call   80494f9 <phase_defused>
 8048b9e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ba3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8048ba6:	c9                   	leave  
 8048ba7:	c3                   	ret    
 8048ba8:	90                   	nop
 8048ba9:	90                   	nop
 8048baa:	90                   	nop
 8048bab:	90                   	nop
 8048bac:	90                   	nop
 8048bad:	90                   	nop
 8048bae:	90                   	nop
 8048baf:	90                   	nop

08048bb0 <phase_1>:
 8048bb0:	83 ec 1c             	sub    $0x1c,%esp
 8048bb3:	c7 44 24 04 3c a4 04 	movl   $0x804a43c,0x4(%esp)
 8048bba:	08 
 8048bbb:	8b 44 24 20          	mov    0x20(%esp),%eax
 8048bbf:	89 04 24             	mov    %eax,(%esp)
 8048bc2:	e8 8d 04 00 00       	call   8049054 <strings_not_equal>
 8048bc7:	85 c0                	test   %eax,%eax
 8048bc9:	74 05                	je     8048bd0 <phase_1+0x20>
 8048bcb:	e8 8c 07 00 00       	call   804935c <explode_bomb>
 8048bd0:	83 c4 1c             	add    $0x1c,%esp
 8048bd3:	c3                   	ret    

08048bd4 <phase_2>:
 8048bd4:	53                   	push   %ebx
 8048bd5:	83 ec 38             	sub    $0x38,%esp
 8048bd8:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048bdc:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048be0:	8b 44 24 40          	mov    0x40(%esp),%eax
 8048be4:	89 04 24             	mov    %eax,(%esp)
 8048be7:	e8 bd 08 00 00       	call   80494a9 <read_six_numbers>
 8048bec:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp) # first number > 0
 8048bf1:	79 05                	jns    8048bf8 <phase_2+0x24>
 8048bf3:	e8 64 07 00 00       	call   804935c <explode_bomb>
 8048bf8:	bb 01 00 00 00       	mov    $0x1,%ebx # %ebx = 0x1
 8048bfd:	89 d8                	mov    %ebx,%eax # %eax = %ebx
 8048bff:	03 44 9c 14          	add    0x14(%esp,%ebx,4),%eax # %eax = last number number + (n - 1)
 8048c03:	39 44 9c 18          	cmp    %eax,0x18(%esp,%ebx,4) # %eax == next number
 8048c07:	74 05                	je     8048c0e <phase_2+0x3a>
 8048c09:	e8 4e 07 00 00       	call   804935c <explode_bomb>
 8048c0e:	83 c3 01             	add    $0x1,%ebx
 8048c11:	83 fb 06             	cmp    $0x6,%ebx # until 6 done
 8048c14:	75 e7                	jne    8048bfd <phase_2+0x29>
 8048c16:	83 c4 38             	add    $0x38,%esp
 8048c19:	5b                   	pop    %ebx
 8048c1a:	c3                   	ret    

08048c1b <phase_3>:
 8048c1b:	83 ec 2c             	sub    $0x2c,%esp # %esp -= 11*4 (length of string?)
 8048c1e:	8d 44 24 1c          	lea    0x1c(%esp),%eax # %eax = %esp + 7*4 (address)
 8048c22:	89 44 24 0c          	mov    %eax,0xc(%esp) # %esp + 3*4 = 0x0(%eax) ??
 8048c26:	8d 44 24 18          	lea    0x18(%esp),%eax # %eax = %esp + 0x18 
 8048c2a:	89 44 24 08          	mov    %eax,0x8(%esp) # %esp + 2*4 = 0x0(%eax)
 8048c2e:	c7 44 24 04 65 a7 04 	movl   $0x804a765,0x4(%esp) # %esp + 1*4 = 0x804a765 
 8048c35:	08 
 8048c36:	8b 44 24 30          	mov    0x30(%esp),%eax # %eax = 0x30(%esp)
 8048c3a:	89 04 24             	mov    %eax,(%esp) # (%esp) = %eax
 8048c3d:	e8 8e fc ff ff       	call   80488d0 <__isoc99_sscanf@plt> # 0x18(%esp) = first_number, 0x1c(%esp) = second_number
 8048c42:	83 f8 01             	cmp    $0x1,%eax
 8048c45:	7f 05                	jg     8048c4c <phase_3+0x31>
 8048c47:	e8 10 07 00 00       	call   804935c <explode_bomb>
 8048c4c:	83 7c 24 18 07       	cmpl   $0x7,0x18(%esp) 
 8048c51:	77 66                	ja     8048cb9 <phase_3+0x9e> # if first_digit <= $0x7 -> goto explode_bomb
 8048c53:	8b 44 24 18          	mov    0x18(%esp),%eax # %eax = first number
 8048c57:	ff 24 85 a0 a4 04 08 	jmp    *0x804a4a0(,%eax,4) # 0x08048c65 + eax * 4 (switch)
 8048c5e:	b8 00 00 00 00       	mov    $0x0,%eax # %eax = 0
 8048c63:	eb 05                	jmp    8048c6a <phase_3+0x4f>
 8048c65:	b8 be 01 00 00       	mov    $0x1be,%eax
 8048c6a:	2d 5c 01 00 00       	sub    $0x15c,%eax
 8048c6f:	eb 05                	jmp    8048c76 <phase_3+0x5b>
 8048c71:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c76:	05 a6 00 00 00       	add    $0xa6,%eax
 8048c7b:	eb 05                	jmp    8048c82 <phase_3+0x67>
 8048c7d:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c82:	2d 43 01 00 00       	sub    $0x143,%eax
 8048c87:	eb 05                	jmp    8048c8e <phase_3+0x73>
 8048c89:	b8 00 00 00 00       	mov    $0x0,%eax
 8048c8e:	05 43 01 00 00       	add    $0x143,%eax
 8048c93:	eb 05                	jmp    8048c9a <phase_3+0x7f>
 8048c95:	b8 00 00 00 00       	mov    $0x0,%eax # %eax = 0 (jump if first number is 5)
 8048c9a:	2d 43 01 00 00       	sub    $0x143,%eax # %eax -= 0x143
 8048c9f:	eb 05                	jmp    8048ca6 <phase_3+0x8b>
 8048ca1:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ca6:	05 43 01 00 00       	add    $0x143,%eax # %eax += 0x143
 8048cab:	eb 05                	jmp    8048cb2 <phase_3+0x97>
 8048cad:	b8 00 00 00 00       	mov    $0x0,%eax
 8048cb2:	2d 43 01 00 00       	sub    $0x143,%eax # %eax -= 0x143
 8048cb7:	eb 0a                	jmp    8048cc3 <phase_3+0xa8>
 8048cb9:	e8 9e 06 00 00       	call   804935c <explode_bomb>
 8048cbe:	b8 00 00 00 00       	mov    $0x0,%eax
 8048cc3:	83 7c 24 18 05       	cmpl   $0x5,0x18(%esp) # if first_number > 5 go to 8048cd0
 8048cc8:	7f 06                	jg     8048cd0 <phase_3+0xb5>
 8048cca:	3b 44 24 1c          	cmp    0x1c(%esp),%eax # check if second_number is equal to %eax
 8048cce:	74 05                	je     8048cd5 <phase_3+0xba>
 8048cd0:	e8 87 06 00 00       	call   804935c <explode_bomb>
 8048cd5:	83 c4 2c             	add    $0x2c,%esp # %esp += 0x2c (unload stack)
 8048cd8:	c3                   	ret    

08048cd9 <func4>:
 8048cd9:	83 ec 1c             	sub    $0x1c,%esp
 8048cdc:	89 5c 24 10          	mov    %ebx,0x10(%esp)
 8048ce0:	89 74 24 14          	mov    %esi,0x14(%esp)
 8048ce4:	89 7c 24 18          	mov    %edi,0x18(%esp)
 8048ce8:	8b 74 24 20          	mov    0x20(%esp),%esi
 8048cec:	8b 5c 24 24          	mov    0x24(%esp),%ebx
 8048cf0:	85 f6                	test   %esi,%esi
 8048cf2:	7e 2b                	jle    8048d1f <func4+0x46>
 8048cf4:	83 fe 01             	cmp    $0x1,%esi
 8048cf7:	74 2b                	je     8048d24 <func4+0x4b>
 8048cf9:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8048cfd:	8d 46 ff             	lea    -0x1(%esi),%eax
 8048d00:	89 04 24             	mov    %eax,(%esp)
 8048d03:	e8 d1 ff ff ff       	call   8048cd9 <func4>
 8048d08:	8d 3c 18             	lea    (%eax,%ebx,1),%edi
 8048d0b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8048d0f:	83 ee 02             	sub    $0x2,%esi
 8048d12:	89 34 24             	mov    %esi,(%esp)
 8048d15:	e8 bf ff ff ff       	call   8048cd9 <func4>
 8048d1a:	8d 1c 07             	lea    (%edi,%eax,1),%ebx
 8048d1d:	eb 05                	jmp    8048d24 <func4+0x4b>
 8048d1f:	bb 00 00 00 00       	mov    $0x0,%ebx
 8048d24:	89 d8                	mov    %ebx,%eax
 8048d26:	8b 5c 24 10          	mov    0x10(%esp),%ebx
 8048d2a:	8b 74 24 14          	mov    0x14(%esp),%esi
 8048d2e:	8b 7c 24 18          	mov    0x18(%esp),%edi
 8048d32:	83 c4 1c             	add    $0x1c,%esp
 8048d35:	c3                   	ret    

08048d36 <phase_4>:
 8048d36:	83 ec 2c             	sub    $0x2c,%esp #allocate memory
 8048d39:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048d3d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048d41:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8048d45:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048d49:	c7 44 24 04 65 a7 04 	movl   $0x804a765,0x4(%esp)
 8048d50:	08 
 8048d51:	8b 44 24 30          	mov    0x30(%esp),%eax
 8048d55:	89 04 24             	mov    %eax,(%esp)
 8048d58:	e8 73 fb ff ff       	call   80488d0 <__isoc99_sscanf@plt> #%d %d
 8048d5d:	83 f8 02             	cmp    $0x2,%eax # check for 2 args
 8048d60:	75 0e                	jne    8048d70 <phase_4+0x3a>
 8048d62:	8b 44 24 18          	mov    0x18(%esp),%eax # %eax = second num
 8048d66:	83 f8 01             	cmp    $0x1,%eax # %eax <= 1 explode
 8048d69:	7e 05                	jle    8048d70 <phase_4+0x3a> #explode
 8048d6b:	83 f8 04             	cmp    $0x4,%eax # %eax <= 4 correct
 8048d6e:	7e 05                	jle    8048d75 <phase_4+0x3f> #correct
 8048d70:	e8 e7 05 00 00       	call   804935c <explode_bomb>
 8048d75:	8b 44 24 18          	mov    0x18(%esp),%eax # %eax = second num
 8048d79:	89 44 24 04          	mov    %eax,0x4(%esp) # %esp + 0x4 = second num (mask)
 8048d7d:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp) # (%esp) input string = 0x5 
 8048d84:	e8 50 ff ff ff       	call   8048cd9 <func4>
 8048d89:	3b 44 24 1c          	cmp    0x1c(%esp),%eax # %eax == 2 returns
 8048d8d:	74 05                	je     8048d94 <phase_4+0x5e>
 8048d8f:	e8 c8 05 00 00       	call   804935c <explode_bomb>
 8048d94:	83 c4 2c             	add    $0x2c,%esp
 8048d97:	c3                   	ret    

08048d98 <phase_5>:
 8048d98:	53                   	push   %ebx
 8048d99:	83 ec 28             	sub    $0x28,%esp
 8048d9c:	8b 5c 24 30          	mov    0x30(%esp),%ebx
 8048da0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048da6:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048daa:	31 c0                	xor    %eax,%eax
 8048dac:	89 1c 24             	mov    %ebx,(%esp)
 8048daf:	e8 87 02 00 00       	call   804903b <string_length>
 8048db4:	83 f8 06             	cmp    $0x6,%eax
 8048db7:	74 05                	je     8048dbe <phase_5+0x26>
 8048db9:	e8 9e 05 00 00       	call   804935c <explode_bomb>
 8048dbe:	b8 00 00 00 00       	mov    $0x0,%eax
 8048dc3:	0f be 14 03          	movsbl (%ebx,%eax,1),%edx
 8048dc7:	83 e2 0f             	and    $0xf,%edx
 8048dca:	0f b6 92 c0 a4 04 08 	movzbl 0x804a4c0(%edx),%edx
 8048dd1:	88 54 04 15          	mov    %dl,0x15(%esp,%eax,1)
 8048dd5:	83 c0 01             	add    $0x1,%eax
 8048dd8:	83 f8 06             	cmp    $0x6,%eax
 8048ddb:	75 e6                	jne    8048dc3 <phase_5+0x2b>
 8048ddd:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
 8048de2:	c7 44 24 04 96 a4 04 	movl   $0x804a496,0x4(%esp)
 8048de9:	08 
 8048dea:	8d 44 24 15          	lea    0x15(%esp),%eax
 8048dee:	89 04 24             	mov    %eax,(%esp)
 8048df1:	e8 5e 02 00 00       	call   8049054 <strings_not_equal>
 8048df6:	85 c0                	test   %eax,%eax
 8048df8:	74 05                	je     8048dff <phase_5+0x67>
 8048dfa:	e8 5d 05 00 00       	call   804935c <explode_bomb>
 8048dff:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8048e03:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048e0a:	74 09                	je     8048e15 <phase_5+0x7d>
 8048e0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048e10:	e8 fb f9 ff ff       	call   8048810 <__stack_chk_fail@plt>
 8048e15:	83 c4 28             	add    $0x28,%esp
 8048e18:	5b                   	pop    %ebx
 8048e19:	c3                   	ret    

08048e1a <phase_6>:
 8048e1a:	56                   	push   %esi
 8048e1b:	53                   	push   %ebx
 8048e1c:	83 ec 44             	sub    $0x44,%esp
 8048e1f:	8d 44 24 10          	lea    0x10(%esp),%eax
 8048e23:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048e27:	8b 44 24 50          	mov    0x50(%esp),%eax
 8048e2b:	89 04 24             	mov    %eax,(%esp)
 8048e2e:	e8 76 06 00 00       	call   80494a9 <read_six_numbers>
 8048e33:	be 00 00 00 00       	mov    $0x0,%esi
 8048e38:	8b 44 b4 10          	mov    0x10(%esp,%esi,4),%eax
 8048e3c:	83 e8 01             	sub    $0x1,%eax
 8048e3f:	83 f8 05             	cmp    $0x5,%eax
 8048e42:	76 05                	jbe    8048e49 <phase_6+0x2f>
 8048e44:	e8 13 05 00 00       	call   804935c <explode_bomb>
 8048e49:	83 c6 01             	add    $0x1,%esi
 8048e4c:	83 fe 06             	cmp    $0x6,%esi
 8048e4f:	74 33                	je     8048e84 <phase_6+0x6a>
 8048e51:	89 f3                	mov    %esi,%ebx
 8048e53:	8b 44 9c 10          	mov    0x10(%esp,%ebx,4),%eax
 8048e57:	39 44 b4 0c          	cmp    %eax,0xc(%esp,%esi,4)
 8048e5b:	75 05                	jne    8048e62 <phase_6+0x48>
 8048e5d:	e8 fa 04 00 00       	call   804935c <explode_bomb>
 8048e62:	83 c3 01             	add    $0x1,%ebx
 8048e65:	83 fb 05             	cmp    $0x5,%ebx
 8048e68:	7e e9                	jle    8048e53 <phase_6+0x39>
 8048e6a:	eb cc                	jmp    8048e38 <phase_6+0x1e>
 8048e6c:	8b 52 08             	mov    0x8(%edx),%edx
 8048e6f:	83 c0 01             	add    $0x1,%eax
 8048e72:	39 c8                	cmp    %ecx,%eax
 8048e74:	75 f6                	jne    8048e6c <phase_6+0x52>
 8048e76:	89 54 b4 28          	mov    %edx,0x28(%esp,%esi,4)
 8048e7a:	83 c3 01             	add    $0x1,%ebx
 8048e7d:	83 fb 06             	cmp    $0x6,%ebx
 8048e80:	75 07                	jne    8048e89 <phase_6+0x6f>
 8048e82:	eb 1c                	jmp    8048ea0 <phase_6+0x86>
 8048e84:	bb 00 00 00 00       	mov    $0x0,%ebx
 8048e89:	89 de                	mov    %ebx,%esi
 8048e8b:	8b 4c 9c 10          	mov    0x10(%esp,%ebx,4),%ecx
 8048e8f:	b8 01 00 00 00       	mov    $0x1,%eax
 8048e94:	ba 54 c1 04 08       	mov    $0x804c154,%edx
 8048e99:	83 f9 01             	cmp    $0x1,%ecx
 8048e9c:	7f ce                	jg     8048e6c <phase_6+0x52>
 8048e9e:	eb d6                	jmp    8048e76 <phase_6+0x5c>
 8048ea0:	8b 5c 24 28          	mov    0x28(%esp),%ebx
 8048ea4:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8048ea8:	89 43 08             	mov    %eax,0x8(%ebx)
 8048eab:	8b 54 24 30          	mov    0x30(%esp),%edx
 8048eaf:	89 50 08             	mov    %edx,0x8(%eax)
 8048eb2:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048eb6:	89 42 08             	mov    %eax,0x8(%edx)
 8048eb9:	8b 54 24 38          	mov    0x38(%esp),%edx
 8048ebd:	89 50 08             	mov    %edx,0x8(%eax)
 8048ec0:	8b 44 24 3c          	mov    0x3c(%esp),%eax
 8048ec4:	89 42 08             	mov    %eax,0x8(%edx)
 8048ec7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
 8048ece:	be 05 00 00 00       	mov    $0x5,%esi
 8048ed3:	8b 43 08             	mov    0x8(%ebx),%eax
 8048ed6:	8b 10                	mov    (%eax),%edx
 8048ed8:	39 13                	cmp    %edx,(%ebx) # %ebx (node #1) <= %edx (node #2)
 8048eda:	7e 05                	jle    8048ee1 <phase_6+0xc7>
 8048edc:	e8 7b 04 00 00       	call   804935c <explode_bomb>
 8048ee1:	8b 5b 08             	mov    0x8(%ebx),%ebx
 8048ee4:	83 ee 01             	sub    $0x1,%esi
 8048ee7:	75 ea                	jne    8048ed3 <phase_6+0xb9>
 8048ee9:	83 c4 44             	add    $0x44,%esp
 8048eec:	5b                   	pop    %ebx
 8048eed:	5e                   	pop    %esi
 8048eee:	c3                   	ret    

08048eef <fun7>:
 8048eef:	53                   	push   %ebx
 8048ef0:	83 ec 18             	sub    $0x18,%esp
 8048ef3:	8b 54 24 20          	mov    0x20(%esp),%edx
 8048ef7:	8b 4c 24 24          	mov    0x24(%esp),%ecx
 8048efb:	85 d2                	test   %edx,%edx #test edx == 0 arg passed in
 8048efd:	74 37                	je     8048f36 <fun7+0x47>
 8048eff:	8b 1a                	mov    (%edx),%ebx #ebx = 36, #eax = x- 1 #ecx = x
 8048f01:	39 cb                	cmp    %ecx,%ebx # %ebx <= %ecx jump f18
 8048f03:	7e 13                	jle    8048f18 <fun7+0x29>
 8048f05:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8048f09:	8b 42 04             	mov    0x4(%edx),%eax
 8048f0c:	89 04 24             	mov    %eax,(%esp)
 8048f0f:	e8 db ff ff ff       	call   8048eef <fun7>
 8048f14:	01 c0                	add    %eax,%eax
 8048f16:	eb 23                	jmp    8048f3b <fun7+0x4c>
 8048f18:	b8 00 00 00 00       	mov    $0x0,%eax # return 0 <- jump point
 8048f1d:	39 cb                	cmp    %ecx,%ebx # %ebx <= %ecx return
 8048f1f:	74 1a                	je     8048f3b <fun7+0x4c>
 8048f21:	89 4c 24 04          	mov    %ecx,0x4(%esp) # move x onto stack
 8048f25:	8b 42 08             	mov    0x8(%edx),%eax # advance along two on the args b8
 8048f28:	89 04 24             	mov    %eax,(%esp) # move x - 1 onto stack
 8048f2b:	e8 bf ff ff ff       	call   8048eef <fun7> # recurse
 8048f30:	8d 44 00 01          	lea    0x1(%eax,%eax,1),%eax
 8048f34:	eb 05                	jmp    8048f3b <fun7+0x4c>
 8048f36:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8048f3b:	83 c4 18             	add    $0x18,%esp
 8048f3e:	5b                   	pop    %ebx
 8048f3f:	c3                   	ret    

08048f40 <secret_phase>:
 8048f40:	53                   	push   %ebx
 8048f41:	83 ec 18             	sub    $0x18,%esp
 8048f44:	e8 52 04 00 00       	call   804939b <read_line>
 8048f49:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
 8048f50:	00 
 8048f51:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8048f58:	00 
 8048f59:	89 04 24             	mov    %eax,(%esp)
 8048f5c:	e8 df f9 ff ff       	call   8048940 <strtol@plt>
 8048f61:	89 c3                	mov    %eax,%ebx
 8048f63:	8d 40 ff             	lea    -0x1(%eax),%eax # %eax = input - 1
 8048f66:	3d e8 03 00 00       	cmp    $0x3e8,%eax # %eax <= 1000 jump to 72
 8048f6b:	76 05                	jbe    8048f72 <secret_phase+0x32>
 8048f6d:	e8 ea 03 00 00       	call   804935c <explode_bomb>
 8048f72:	89 5c 24 04          	mov    %ebx,0x4(%esp) # base ppointer
 8048f76:	c7 04 24 a0 c0 04 08 	movl   $0x804c0a0,(%esp) # 0x24 (36) $
 8048f7d:	e8 6d ff ff ff       	call   8048eef <fun7>
 8048f82:	83 f8 02             	cmp    $0x2,%eax # %eax (22 works!)
 8048f85:	74 05                	je     8048f8c <secret_phase+0x4c>
 8048f87:	e8 d0 03 00 00       	call   804935c <explode_bomb>
 8048f8c:	c7 04 24 70 a4 04 08 	movl   $0x804a470,(%esp)
 8048f93:	e8 b8 f8 ff ff       	call   8048850 <puts@plt>
 8048f98:	e8 5c 05 00 00       	call   80494f9 <phase_defused>
 8048f9d:	83 c4 18             	add    $0x18,%esp
 8048fa0:	5b                   	pop    %ebx
 8048fa1:	c3                   	ret    
 8048fa2:	90                   	nop
 8048fa3:	90                   	nop
 8048fa4:	90                   	nop
 8048fa5:	90                   	nop
 8048fa6:	90                   	nop
 8048fa7:	90                   	nop
 8048fa8:	90                   	nop
 8048fa9:	90                   	nop
 8048faa:	90                   	nop
 8048fab:	90                   	nop
 8048fac:	90                   	nop
 8048fad:	90                   	nop
 8048fae:	90                   	nop
 8048faf:	90                   	nop

08048fb0 <sig_handler>:
 8048fb0:	83 ec 1c             	sub    $0x1c,%esp
 8048fb3:	c7 04 24 d0 a4 04 08 	movl   $0x804a4d0,(%esp)
 8048fba:	e8 91 f8 ff ff       	call   8048850 <puts@plt>
 8048fbf:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
 8048fc6:	e8 25 f8 ff ff       	call   80487f0 <sleep@plt>
 8048fcb:	c7 44 24 04 8d a6 04 	movl   $0x804a68d,0x4(%esp)
 8048fd2:	08 
 8048fd3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048fda:	e8 21 f9 ff ff       	call   8048900 <__printf_chk@plt>
 8048fdf:	a1 e0 c7 04 08       	mov    0x804c7e0,%eax
 8048fe4:	89 04 24             	mov    %eax,(%esp)
 8048fe7:	e8 d4 f7 ff ff       	call   80487c0 <fflush@plt>
 8048fec:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048ff3:	e8 f8 f7 ff ff       	call   80487f0 <sleep@plt>
 8048ff8:	c7 04 24 95 a6 04 08 	movl   $0x804a695,(%esp)
 8048fff:	e8 4c f8 ff ff       	call   8048850 <puts@plt>
 8049004:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
 804900b:	e8 80 f8 ff ff       	call   8048890 <exit@plt>

08049010 <invalid_phase>:
 8049010:	83 ec 1c             	sub    $0x1c,%esp
 8049013:	8b 44 24 20          	mov    0x20(%esp),%eax
 8049017:	89 44 24 08          	mov    %eax,0x8(%esp)
 804901b:	c7 44 24 04 9d a6 04 	movl   $0x804a69d,0x4(%esp)
 8049022:	08 
 8049023:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804902a:	e8 d1 f8 ff ff       	call   8048900 <__printf_chk@plt>
 804902f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049036:	e8 55 f8 ff ff       	call   8048890 <exit@plt>

0804903b <string_length>:
 804903b:	8b 54 24 04          	mov    0x4(%esp),%edx
 804903f:	b8 00 00 00 00       	mov    $0x0,%eax
 8049044:	80 3a 00             	cmpb   $0x0,(%edx)
 8049047:	74 09                	je     8049052 <string_length+0x17>
 8049049:	83 c0 01             	add    $0x1,%eax
 804904c:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
 8049050:	75 f7                	jne    8049049 <string_length+0xe>
 8049052:	f3 c3                	repz ret 

08049054 <strings_not_equal>:
 8049054:	83 ec 10             	sub    $0x10,%esp
 8049057:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804905b:	89 74 24 08          	mov    %esi,0x8(%esp)
 804905f:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8049063:	8b 5c 24 14          	mov    0x14(%esp),%ebx
 8049067:	8b 74 24 18          	mov    0x18(%esp),%esi
 804906b:	89 1c 24             	mov    %ebx,(%esp)
 804906e:	e8 c8 ff ff ff       	call   804903b <string_length>
 8049073:	89 c7                	mov    %eax,%edi
 8049075:	89 34 24             	mov    %esi,(%esp)
 8049078:	e8 be ff ff ff       	call   804903b <string_length>
 804907d:	ba 01 00 00 00       	mov    $0x1,%edx
 8049082:	39 c7                	cmp    %eax,%edi
 8049084:	75 33                	jne    80490b9 <strings_not_equal+0x65>
 8049086:	0f b6 03             	movzbl (%ebx),%eax
 8049089:	b2 00                	mov    $0x0,%dl
 804908b:	84 c0                	test   %al,%al
 804908d:	74 2a                	je     80490b9 <strings_not_equal+0x65>
 804908f:	b2 01                	mov    $0x1,%dl
 8049091:	3a 06                	cmp    (%esi),%al
 8049093:	75 24                	jne    80490b9 <strings_not_equal+0x65>
 8049095:	b8 00 00 00 00       	mov    $0x0,%eax
 804909a:	eb 08                	jmp    80490a4 <strings_not_equal+0x50>
 804909c:	83 c0 01             	add    $0x1,%eax
 804909f:	3a 14 06             	cmp    (%esi,%eax,1),%dl
 80490a2:	75 10                	jne    80490b4 <strings_not_equal+0x60>
 80490a4:	0f b6 54 03 01       	movzbl 0x1(%ebx,%eax,1),%edx
 80490a9:	84 d2                	test   %dl,%dl
 80490ab:	75 ef                	jne    804909c <strings_not_equal+0x48>
 80490ad:	ba 00 00 00 00       	mov    $0x0,%edx
 80490b2:	eb 05                	jmp    80490b9 <strings_not_equal+0x65>
 80490b4:	ba 01 00 00 00       	mov    $0x1,%edx
 80490b9:	89 d0                	mov    %edx,%eax
 80490bb:	8b 5c 24 04          	mov    0x4(%esp),%ebx
 80490bf:	8b 74 24 08          	mov    0x8(%esp),%esi
 80490c3:	8b 7c 24 0c          	mov    0xc(%esp),%edi
 80490c7:	83 c4 10             	add    $0x10,%esp
 80490ca:	c3                   	ret    

080490cb <initialize_bomb>:
 80490cb:	56                   	push   %esi
 80490cc:	53                   	push   %ebx
 80490cd:	81 ec 64 20 00 00    	sub    $0x2064,%esp
 80490d3:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80490d9:	89 84 24 5c 20 00 00 	mov    %eax,0x205c(%esp)
 80490e0:	31 c0                	xor    %eax,%eax
 80490e2:	c7 44 24 04 b0 8f 04 	movl   $0x8048fb0,0x4(%esp)
 80490e9:	08 
 80490ea:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 80490f1:	e8 ea f6 ff ff       	call   80487e0 <signal@plt>
 80490f6:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)
 80490fd:	00 
 80490fe:	8d 84 24 1c 20 00 00 	lea    0x201c(%esp),%eax
 8049105:	89 04 24             	mov    %eax,(%esp)
 8049108:	e8 23 f7 ff ff       	call   8048830 <gethostname@plt>
 804910d:	85 c0                	test   %eax,%eax
 804910f:	75 17                	jne    8049128 <initialize_bomb+0x5d>
 8049111:	a1 c0 c5 04 08       	mov    0x804c5c0,%eax
 8049116:	bb 00 00 00 00       	mov    $0x0,%ebx
 804911b:	8d b4 24 1c 20 00 00 	lea    0x201c(%esp),%esi
 8049122:	85 c0                	test   %eax,%eax
 8049124:	75 1a                	jne    8049140 <initialize_bomb+0x75>
 8049126:	eb 70                	jmp    8049198 <initialize_bomb+0xcd>
 8049128:	c7 04 24 08 a5 04 08 	movl   $0x804a508,(%esp)
 804912f:	e8 1c f7 ff ff       	call   8048850 <puts@plt>
 8049134:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 804913b:	e8 50 f7 ff ff       	call   8048890 <exit@plt>
 8049140:	89 74 24 04          	mov    %esi,0x4(%esp)
 8049144:	89 04 24             	mov    %eax,(%esp)
 8049147:	e8 74 f7 ff ff       	call   80488c0 <strcasecmp@plt>
 804914c:	85 c0                	test   %eax,%eax
 804914e:	74 10                	je     8049160 <initialize_bomb+0x95>
 8049150:	83 c3 01             	add    $0x1,%ebx
 8049153:	8b 04 9d c0 c5 04 08 	mov    0x804c5c0(,%ebx,4),%eax
 804915a:	85 c0                	test   %eax,%eax
 804915c:	75 e2                	jne    8049140 <initialize_bomb+0x75>
 804915e:	eb 38                	jmp    8049198 <initialize_bomb+0xcd>
 8049160:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049164:	89 04 24             	mov    %eax,(%esp)
 8049167:	e8 25 0e 00 00       	call   8049f91 <init_driver>
 804916c:	85 c0                	test   %eax,%eax
 804916e:	79 40                	jns    80491b0 <initialize_bomb+0xe5>
 8049170:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8049174:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049178:	c7 44 24 04 ae a6 04 	movl   $0x804a6ae,0x4(%esp)
 804917f:	08 
 8049180:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049187:	e8 74 f7 ff ff       	call   8048900 <__printf_chk@plt>
 804918c:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049193:	e8 f8 f6 ff ff       	call   8048890 <exit@plt>
 8049198:	c7 04 24 40 a5 04 08 	movl   $0x804a540,(%esp)
 804919f:	e8 ac f6 ff ff       	call   8048850 <puts@plt>
 80491a4:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80491ab:	e8 e0 f6 ff ff       	call   8048890 <exit@plt>
 80491b0:	8b 84 24 5c 20 00 00 	mov    0x205c(%esp),%eax
 80491b7:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80491be:	74 05                	je     80491c5 <initialize_bomb+0xfa>
 80491c0:	e8 4b f6 ff ff       	call   8048810 <__stack_chk_fail@plt>
 80491c5:	81 c4 64 20 00 00    	add    $0x2064,%esp
 80491cb:	5b                   	pop    %ebx
 80491cc:	5e                   	pop    %esi
 80491cd:	c3                   	ret    

080491ce <initialize_bomb_solve>:
 80491ce:	f3 c3                	repz ret 

080491d0 <blank_line>:
 80491d0:	56                   	push   %esi
 80491d1:	53                   	push   %ebx
 80491d2:	83 ec 04             	sub    $0x4,%esp
 80491d5:	8b 74 24 10          	mov    0x10(%esp),%esi
 80491d9:	eb 14                	jmp    80491ef <blank_line+0x1f>
 80491db:	e8 90 f7 ff ff       	call   8048970 <__ctype_b_loc@plt>
 80491e0:	83 c6 01             	add    $0x1,%esi
 80491e3:	0f be db             	movsbl %bl,%ebx
 80491e6:	8b 00                	mov    (%eax),%eax
 80491e8:	f6 44 58 01 20       	testb  $0x20,0x1(%eax,%ebx,2)
 80491ed:	74 0e                	je     80491fd <blank_line+0x2d>
 80491ef:	0f b6 1e             	movzbl (%esi),%ebx
 80491f2:	84 db                	test   %bl,%bl
 80491f4:	75 e5                	jne    80491db <blank_line+0xb>
 80491f6:	b8 01 00 00 00       	mov    $0x1,%eax
 80491fb:	eb 05                	jmp    8049202 <blank_line+0x32>
 80491fd:	b8 00 00 00 00       	mov    $0x0,%eax
 8049202:	83 c4 04             	add    $0x4,%esp
 8049205:	5b                   	pop    %ebx
 8049206:	5e                   	pop    %esi
 8049207:	c3                   	ret    

08049208 <skip>:
 8049208:	53                   	push   %ebx
 8049209:	83 ec 18             	sub    $0x18,%esp
 804920c:	a1 f0 c7 04 08       	mov    0x804c7f0,%eax
 8049211:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049215:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)
 804921c:	00 
 804921d:	a1 ec c7 04 08       	mov    0x804c7ec,%eax
 8049222:	8d 04 80             	lea    (%eax,%eax,4),%eax
 8049225:	c1 e0 04             	shl    $0x4,%eax
 8049228:	05 00 c8 04 08       	add    $0x804c800,%eax
 804922d:	89 04 24             	mov    %eax,(%esp)
 8049230:	e8 9b f5 ff ff       	call   80487d0 <fgets@plt>
 8049235:	89 c3                	mov    %eax,%ebx
 8049237:	85 c0                	test   %eax,%eax
 8049239:	74 0c                	je     8049247 <skip+0x3f>
 804923b:	89 04 24             	mov    %eax,(%esp)
 804923e:	e8 8d ff ff ff       	call   80491d0 <blank_line>
 8049243:	85 c0                	test   %eax,%eax
 8049245:	75 c5                	jne    804920c <skip+0x4>
 8049247:	89 d8                	mov    %ebx,%eax
 8049249:	83 c4 18             	add    $0x18,%esp
 804924c:	5b                   	pop    %ebx
 804924d:	c3                   	ret    

0804924e <send_msg>:
 804924e:	57                   	push   %edi
 804924f:	53                   	push   %ebx
 8049250:	81 ec 34 40 00 00    	sub    $0x4034,%esp
 8049256:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804925c:	89 84 24 2c 40 00 00 	mov    %eax,0x402c(%esp)
 8049263:	31 c0                	xor    %eax,%eax
 8049265:	8b 15 ec c7 04 08    	mov    0x804c7ec,%edx
 804926b:	8d 5c 92 fb          	lea    -0x5(%edx,%edx,4),%ebx
 804926f:	c1 e3 04             	shl    $0x4,%ebx
 8049272:	81 c3 00 c8 04 08    	add    $0x804c800,%ebx
 8049278:	89 df                	mov    %ebx,%edi
 804927a:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804927f:	f2 ae                	repnz scas %es:(%edi),%al
 8049281:	f7 d1                	not    %ecx
 8049283:	83 c1 63             	add    $0x63,%ecx
 8049286:	81 f9 00 20 00 00    	cmp    $0x2000,%ecx
 804928c:	76 20                	jbe    80492ae <send_msg+0x60>
 804928e:	c7 44 24 04 78 a5 04 	movl   $0x804a578,0x4(%esp)
 8049295:	08 
 8049296:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804929d:	e8 5e f6 ff ff       	call   8048900 <__printf_chk@plt>
 80492a2:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80492a9:	e8 e2 f5 ff ff       	call   8048890 <exit@plt>
 80492ae:	83 bc 24 40 40 00 00 	cmpl   $0x0,0x4040(%esp)
 80492b5:	00 
 80492b6:	b8 c8 a6 04 08       	mov    $0x804a6c8,%eax
 80492bb:	b9 d0 a6 04 08       	mov    $0x804a6d0,%ecx
 80492c0:	0f 44 c1             	cmove  %ecx,%eax
 80492c3:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
 80492c7:	89 54 24 18          	mov    %edx,0x18(%esp)
 80492cb:	89 44 24 14          	mov    %eax,0x14(%esp)
 80492cf:	a1 a0 c5 04 08       	mov    0x804c5a0,%eax
 80492d4:	89 44 24 10          	mov    %eax,0x10(%esp)
 80492d8:	c7 44 24 0c d9 a6 04 	movl   $0x804a6d9,0xc(%esp)
 80492df:	08 
 80492e0:	c7 44 24 08 00 20 00 	movl   $0x2000,0x8(%esp)
 80492e7:	00 
 80492e8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80492ef:	00 
 80492f0:	8d 5c 24 2c          	lea    0x2c(%esp),%ebx
 80492f4:	89 1c 24             	mov    %ebx,(%esp)
 80492f7:	e8 84 f6 ff ff       	call   8048980 <__sprintf_chk@plt>
 80492fc:	8d 84 24 2c 20 00 00 	lea    0x202c(%esp),%eax
 8049303:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049307:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 804930e:	00 
 804930f:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 8049313:	c7 04 24 a0 c1 04 08 	movl   $0x804c1a0,(%esp)
 804931a:	e8 80 0e 00 00       	call   804a19f <driver_post>
 804931f:	85 c0                	test   %eax,%eax
 8049321:	79 1b                	jns    804933e <send_msg+0xf0>
 8049323:	8d 84 24 2c 20 00 00 	lea    0x202c(%esp),%eax
 804932a:	89 04 24             	mov    %eax,(%esp)
 804932d:	e8 1e f5 ff ff       	call   8048850 <puts@plt>
 8049332:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8049339:	e8 52 f5 ff ff       	call   8048890 <exit@plt>
 804933e:	8b 84 24 2c 40 00 00 	mov    0x402c(%esp),%eax
 8049345:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 804934c:	74 05                	je     8049353 <send_msg+0x105>
 804934e:	e8 bd f4 ff ff       	call   8048810 <__stack_chk_fail@plt>
 8049353:	81 c4 34 40 00 00    	add    $0x4034,%esp
 8049359:	5b                   	pop    %ebx
 804935a:	5f                   	pop    %edi
 804935b:	c3                   	ret    

0804935c <explode_bomb>:
 804935c:	83 ec 1c             	sub    $0x1c,%esp
 804935f:	c7 04 24 e5 a6 04 08 	movl   $0x804a6e5,(%esp)
 8049366:	e8 e5 f4 ff ff       	call   8048850 <puts@plt>
 804936b:	c7 04 24 ee a6 04 08 	movl   $0x804a6ee,(%esp)
 8049372:	e8 d9 f4 ff ff       	call   8048850 <puts@plt>
 8049377:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804937e:	e8 cb fe ff ff       	call   804924e <send_msg>
 8049383:	c7 04 24 9c a5 04 08 	movl   $0x804a59c,(%esp)
 804938a:	e8 c1 f4 ff ff       	call   8048850 <puts@plt>
 804938f:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 8049396:	e8 f5 f4 ff ff       	call   8048890 <exit@plt>

0804939b <read_line>:
 804939b:	83 ec 2c             	sub    $0x2c,%esp
 804939e:	89 5c 24 20          	mov    %ebx,0x20(%esp)
 80493a2:	89 74 24 24          	mov    %esi,0x24(%esp)
 80493a6:	89 7c 24 28          	mov    %edi,0x28(%esp)
 80493aa:	e8 59 fe ff ff       	call   8049208 <skip>
 80493af:	85 c0                	test   %eax,%eax
 80493b1:	75 6c                	jne    804941f <read_line+0x84>
 80493b3:	a1 c4 c7 04 08       	mov    0x804c7c4,%eax
 80493b8:	39 05 f0 c7 04 08    	cmp    %eax,0x804c7f0
 80493be:	75 18                	jne    80493d8 <read_line+0x3d>
 80493c0:	c7 04 24 05 a7 04 08 	movl   $0x804a705,(%esp)
 80493c7:	e8 84 f4 ff ff       	call   8048850 <puts@plt>
 80493cc:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
 80493d3:	e8 b8 f4 ff ff       	call   8048890 <exit@plt>
 80493d8:	c7 04 24 23 a7 04 08 	movl   $0x804a723,(%esp)
 80493df:	e8 5c f4 ff ff       	call   8048840 <getenv@plt>
 80493e4:	85 c0                	test   %eax,%eax
 80493e6:	74 0c                	je     80493f4 <read_line+0x59>
 80493e8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80493ef:	e8 9c f4 ff ff       	call   8048890 <exit@plt>
 80493f4:	a1 c4 c7 04 08       	mov    0x804c7c4,%eax
 80493f9:	a3 f0 c7 04 08       	mov    %eax,0x804c7f0
 80493fe:	e8 05 fe ff ff       	call   8049208 <skip>
 8049403:	85 c0                	test   %eax,%eax
 8049405:	75 18                	jne    804941f <read_line+0x84>
 8049407:	c7 04 24 05 a7 04 08 	movl   $0x804a705,(%esp)
 804940e:	e8 3d f4 ff ff       	call   8048850 <puts@plt>
 8049413:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804941a:	e8 71 f4 ff ff       	call   8048890 <exit@plt>
 804941f:	8b 15 ec c7 04 08    	mov    0x804c7ec,%edx
 8049425:	8d 1c 92             	lea    (%edx,%edx,4),%ebx
 8049428:	c1 e3 04             	shl    $0x4,%ebx
 804942b:	81 c3 00 c8 04 08    	add    $0x804c800,%ebx
 8049431:	89 df                	mov    %ebx,%edi
 8049433:	b8 00 00 00 00       	mov    $0x0,%eax
 8049438:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 804943d:	f2 ae                	repnz scas %es:(%edi),%al
 804943f:	f7 d1                	not    %ecx
 8049441:	83 e9 01             	sub    $0x1,%ecx
 8049444:	83 f9 4e             	cmp    $0x4e,%ecx
 8049447:	7e 37                	jle    8049480 <read_line+0xe5>
 8049449:	c7 04 24 2e a7 04 08 	movl   $0x804a72e,(%esp)
 8049450:	e8 fb f3 ff ff       	call   8048850 <puts@plt>
 8049455:	a1 ec c7 04 08       	mov    0x804c7ec,%eax
 804945a:	8d 50 01             	lea    0x1(%eax),%edx
 804945d:	89 15 ec c7 04 08    	mov    %edx,0x804c7ec
 8049463:	6b c0 50             	imul   $0x50,%eax,%eax
 8049466:	05 00 c8 04 08       	add    $0x804c800,%eax
 804946b:	ba 49 a7 04 08       	mov    $0x804a749,%edx
 8049470:	b9 04 00 00 00       	mov    $0x4,%ecx
 8049475:	89 c7                	mov    %eax,%edi
 8049477:	89 d6                	mov    %edx,%esi
 8049479:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 804947b:	e8 dc fe ff ff       	call   804935c <explode_bomb>
 8049480:	8d 04 92             	lea    (%edx,%edx,4),%eax
 8049483:	c1 e0 04             	shl    $0x4,%eax
 8049486:	c6 84 01 ff c7 04 08 	movb   $0x0,0x804c7ff(%ecx,%eax,1)
 804948d:	00 
 804948e:	83 c2 01             	add    $0x1,%edx
 8049491:	89 15 ec c7 04 08    	mov    %edx,0x804c7ec
 8049497:	89 d8                	mov    %ebx,%eax
 8049499:	8b 5c 24 20          	mov    0x20(%esp),%ebx
 804949d:	8b 74 24 24          	mov    0x24(%esp),%esi
 80494a1:	8b 7c 24 28          	mov    0x28(%esp),%edi
 80494a5:	83 c4 2c             	add    $0x2c,%esp
 80494a8:	c3                   	ret    

080494a9 <read_six_numbers>:
 80494a9:	83 ec 2c             	sub    $0x2c,%esp
 80494ac:	8b 44 24 34          	mov    0x34(%esp),%eax
 80494b0:	8d 50 14             	lea    0x14(%eax),%edx
 80494b3:	89 54 24 1c          	mov    %edx,0x1c(%esp)
 80494b7:	8d 50 10             	lea    0x10(%eax),%edx
 80494ba:	89 54 24 18          	mov    %edx,0x18(%esp)
 80494be:	8d 50 0c             	lea    0xc(%eax),%edx
 80494c1:	89 54 24 14          	mov    %edx,0x14(%esp)
 80494c5:	8d 50 08             	lea    0x8(%eax),%edx
 80494c8:	89 54 24 10          	mov    %edx,0x10(%esp)
 80494cc:	8d 50 04             	lea    0x4(%eax),%edx
 80494cf:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80494d3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80494d7:	c7 44 24 04 59 a7 04 	movl   $0x804a759,0x4(%esp)
 80494de:	08 
 80494df:	8b 44 24 30          	mov    0x30(%esp),%eax
 80494e3:	89 04 24             	mov    %eax,(%esp)
 80494e6:	e8 e5 f3 ff ff       	call   80488d0 <__isoc99_sscanf@plt>
 80494eb:	83 f8 05             	cmp    $0x5,%eax
 80494ee:	7f 05                	jg     80494f5 <read_six_numbers+0x4c>
 80494f0:	e8 67 fe ff ff       	call   804935c <explode_bomb>
 80494f5:	83 c4 2c             	add    $0x2c,%esp
 80494f8:	c3                   	ret    

080494f9 <phase_defused>:
 80494f9:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
 80494ff:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049505:	89 44 24 7c          	mov    %eax,0x7c(%esp)
 8049509:	31 c0                	xor    %eax,%eax
 804950b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049512:	e8 37 fd ff ff       	call   804924e <send_msg>
 8049517:	83 3d ec c7 04 08 06 	cmpl   $0x6,0x804c7ec
 804951e:	75 7e                	jne    804959e <phase_defused+0xa5>
 8049520:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 8049524:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049528:	8d 44 24 28          	lea    0x28(%esp),%eax
 804952c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049530:	8d 44 24 24          	lea    0x24(%esp),%eax
 8049534:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049538:	c7 44 24 04 6b a7 04 	movl   $0x804a76b,0x4(%esp)
 804953f:	08 
 8049540:	c7 04 24 f0 c8 04 08 	movl   $0x804c8f0,(%esp)
 8049547:	e8 84 f3 ff ff       	call   80488d0 <__isoc99_sscanf@plt>
 804954c:	83 f8 03             	cmp    $0x3,%eax
 804954f:	75 35                	jne    8049586 <phase_defused+0x8d>
 8049551:	c7 44 24 04 74 a7 04 	movl   $0x804a774,0x4(%esp)
 8049558:	08 
 8049559:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 804955d:	89 04 24             	mov    %eax,(%esp)
 8049560:	e8 ef fa ff ff       	call   8049054 <strings_not_equal>
 8049565:	85 c0                	test   %eax,%eax
 8049567:	75 1d                	jne    8049586 <phase_defused+0x8d>
 8049569:	c7 04 24 c0 a5 04 08 	movl   $0x804a5c0,(%esp)
 8049570:	e8 db f2 ff ff       	call   8048850 <puts@plt>
 8049575:	c7 04 24 e8 a5 04 08 	movl   $0x804a5e8,(%esp)
 804957c:	e8 cf f2 ff ff       	call   8048850 <puts@plt>
 8049581:	e8 ba f9 ff ff       	call   8048f40 <secret_phase>
 8049586:	c7 04 24 20 a6 04 08 	movl   $0x804a620,(%esp)
 804958d:	e8 be f2 ff ff       	call   8048850 <puts@plt>
 8049592:	c7 04 24 4c a6 04 08 	movl   $0x804a64c,(%esp)
 8049599:	e8 b2 f2 ff ff       	call   8048850 <puts@plt>
 804959e:	8b 44 24 7c          	mov    0x7c(%esp),%eax
 80495a2:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80495a9:	74 05                	je     80495b0 <phase_defused+0xb7>
 80495ab:	e8 60 f2 ff ff       	call   8048810 <__stack_chk_fail@plt>
 80495b0:	81 c4 8c 00 00 00    	add    $0x8c,%esp
 80495b6:	c3                   	ret    
 80495b7:	90                   	nop
 80495b8:	90                   	nop
 80495b9:	90                   	nop
 80495ba:	90                   	nop
 80495bb:	90                   	nop
 80495bc:	90                   	nop
 80495bd:	90                   	nop
 80495be:	90                   	nop
 80495bf:	90                   	nop

080495c0 <rio_readlineb>:
 80495c0:	55                   	push   %ebp
 80495c1:	57                   	push   %edi
 80495c2:	56                   	push   %esi
 80495c3:	53                   	push   %ebx
 80495c4:	83 ec 3c             	sub    $0x3c,%esp
 80495c7:	89 c3                	mov    %eax,%ebx
 80495c9:	83 f9 01             	cmp    $0x1,%ecx
 80495cc:	0f 86 bb 00 00 00    	jbe    804968d <rio_readlineb+0xcd>
 80495d2:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 80495d6:	89 54 24 18          	mov    %edx,0x18(%esp)
 80495da:	bd 01 00 00 00       	mov    $0x1,%ebp
 80495df:	8d 78 0c             	lea    0xc(%eax),%edi
 80495e2:	eb 3c                	jmp    8049620 <rio_readlineb+0x60>
 80495e4:	c7 44 24 08 00 20 00 	movl   $0x2000,0x8(%esp)
 80495eb:	00 
 80495ec:	89 7c 24 04          	mov    %edi,0x4(%esp)
 80495f0:	8b 03                	mov    (%ebx),%eax
 80495f2:	89 04 24             	mov    %eax,(%esp)
 80495f5:	e8 b6 f1 ff ff       	call   80487b0 <read@plt>
 80495fa:	89 43 04             	mov    %eax,0x4(%ebx)
 80495fd:	85 c0                	test   %eax,%eax
 80495ff:	79 14                	jns    8049615 <rio_readlineb+0x55>
 8049601:	e8 ea f2 ff ff       	call   80488f0 <__errno_location@plt>
 8049606:	83 38 04             	cmpl   $0x4,(%eax)
 8049609:	74 15                	je     8049620 <rio_readlineb+0x60>
 804960b:	90                   	nop
 804960c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049610:	e9 a0 00 00 00       	jmp    80496b5 <rio_readlineb+0xf5>
 8049615:	85 c0                	test   %eax,%eax
 8049617:	0f 84 9f 00 00 00    	je     80496bc <rio_readlineb+0xfc>
 804961d:	89 7b 08             	mov    %edi,0x8(%ebx)
 8049620:	8b 73 04             	mov    0x4(%ebx),%esi
 8049623:	85 f6                	test   %esi,%esi
 8049625:	7e bd                	jle    80495e4 <rio_readlineb+0x24>
 8049627:	85 f6                	test   %esi,%esi
 8049629:	0f 85 96 00 00 00    	jne    80496c5 <rio_readlineb+0x105>
 804962f:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 8049636:	00 
 8049637:	89 74 24 08          	mov    %esi,0x8(%esp)
 804963b:	8b 43 08             	mov    0x8(%ebx),%eax
 804963e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049642:	8d 44 24 2f          	lea    0x2f(%esp),%eax
 8049646:	89 04 24             	mov    %eax,(%esp)
 8049649:	e8 22 f2 ff ff       	call   8048870 <__memcpy_chk@plt>
 804964e:	01 73 08             	add    %esi,0x8(%ebx)
 8049651:	29 73 04             	sub    %esi,0x4(%ebx)
 8049654:	83 fe 01             	cmp    $0x1,%esi
 8049657:	75 18                	jne    8049671 <rio_readlineb+0xb1>
 8049659:	0f b6 44 24 2f       	movzbl 0x2f(%esp),%eax
 804965e:	8b 54 24 18          	mov    0x18(%esp),%edx
 8049662:	88 02                	mov    %al,(%edx)
 8049664:	83 c2 01             	add    $0x1,%edx
 8049667:	89 54 24 18          	mov    %edx,0x18(%esp)
 804966b:	3c 0a                	cmp    $0xa,%al
 804966d:	75 13                	jne    8049682 <rio_readlineb+0xc2>
 804966f:	eb 25                	jmp    8049696 <rio_readlineb+0xd6>
 8049671:	89 e8                	mov    %ebp,%eax
 8049673:	85 f6                	test   %esi,%esi
 8049675:	75 28                	jne    804969f <rio_readlineb+0xdf>
 8049677:	83 f8 01             	cmp    $0x1,%eax
 804967a:	75 1a                	jne    8049696 <rio_readlineb+0xd6>
 804967c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8049680:	eb 24                	jmp    80496a6 <rio_readlineb+0xe6>
 8049682:	83 c5 01             	add    $0x1,%ebp
 8049685:	3b 6c 24 1c          	cmp    0x1c(%esp),%ebp
 8049689:	75 95                	jne    8049620 <rio_readlineb+0x60>
 804968b:	eb 09                	jmp    8049696 <rio_readlineb+0xd6>
 804968d:	89 54 24 18          	mov    %edx,0x18(%esp)
 8049691:	bd 01 00 00 00       	mov    $0x1,%ebp
 8049696:	8b 44 24 18          	mov    0x18(%esp),%eax
 804969a:	c6 00 00             	movb   $0x0,(%eax)
 804969d:	eb 0c                	jmp    80496ab <rio_readlineb+0xeb>
 804969f:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
 80496a4:	eb 05                	jmp    80496ab <rio_readlineb+0xeb>
 80496a6:	bd 00 00 00 00       	mov    $0x0,%ebp
 80496ab:	89 e8                	mov    %ebp,%eax
 80496ad:	83 c4 3c             	add    $0x3c,%esp
 80496b0:	5b                   	pop    %ebx
 80496b1:	5e                   	pop    %esi
 80496b2:	5f                   	pop    %edi
 80496b3:	5d                   	pop    %ebp
 80496b4:	c3                   	ret    
 80496b5:	be ff ff ff ff       	mov    $0xffffffff,%esi
 80496ba:	eb 05                	jmp    80496c1 <rio_readlineb+0x101>
 80496bc:	be 00 00 00 00       	mov    $0x0,%esi
 80496c1:	89 e8                	mov    %ebp,%eax
 80496c3:	eb ae                	jmp    8049673 <rio_readlineb+0xb3>
 80496c5:	8b 43 08             	mov    0x8(%ebx),%eax
 80496c8:	0f b6 00             	movzbl (%eax),%eax
 80496cb:	88 44 24 2f          	mov    %al,0x2f(%esp)
 80496cf:	83 43 08 01          	addl   $0x1,0x8(%ebx)
 80496d3:	83 6b 04 01          	subl   $0x1,0x4(%ebx)
 80496d7:	eb 80                	jmp    8049659 <rio_readlineb+0x99>

080496d9 <sigalrm_handler>:
 80496d9:	83 ec 1c             	sub    $0x1c,%esp
 80496dc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 80496e3:	00 
 80496e4:	c7 44 24 08 9c a7 04 	movl   $0x804a79c,0x8(%esp)
 80496eb:	08 
 80496ec:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80496f3:	00 
 80496f4:	a1 c0 c7 04 08       	mov    0x804c7c0,%eax
 80496f9:	89 04 24             	mov    %eax,(%esp)
 80496fc:	e8 1f f2 ff ff       	call   8048920 <__fprintf_chk@plt>
 8049701:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8049708:	e8 83 f1 ff ff       	call   8048890 <exit@plt>

0804970d <submitr>:
 804970d:	55                   	push   %ebp
 804970e:	57                   	push   %edi
 804970f:	56                   	push   %esi
 8049710:	53                   	push   %ebx
 8049711:	81 ec 7c a0 00 00    	sub    $0xa07c,%esp
 8049717:	8b 9c 24 90 a0 00 00 	mov    0xa090(%esp),%ebx
 804971e:	8b 84 24 98 a0 00 00 	mov    0xa098(%esp),%eax
 8049725:	89 44 24 30          	mov    %eax,0x30(%esp)
 8049729:	8b 94 24 9c a0 00 00 	mov    0xa09c(%esp),%edx
 8049730:	89 54 24 34          	mov    %edx,0x34(%esp)
 8049734:	8b 8c 24 a0 a0 00 00 	mov    0xa0a0(%esp),%ecx
 804973b:	89 4c 24 38          	mov    %ecx,0x38(%esp)
 804973f:	8b ac 24 a4 a0 00 00 	mov    0xa0a4(%esp),%ebp
 8049746:	8b 84 24 a8 a0 00 00 	mov    0xa0a8(%esp),%eax
 804974d:	89 44 24 28          	mov    %eax,0x28(%esp)
 8049751:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
 8049758:	89 94 24 6c a0 00 00 	mov    %edx,0xa06c(%esp)
 804975f:	31 d2                	xor    %edx,%edx
 8049761:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
 8049768:	00 
 8049769:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049770:	00 
 8049771:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049778:	00 
 8049779:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049780:	e8 8b f1 ff ff       	call   8048910 <socket@plt>
 8049785:	89 44 24 2c          	mov    %eax,0x2c(%esp)
 8049789:	85 c0                	test   %eax,%eax
 804978b:	79 52                	jns    80497df <submitr+0xd2>
 804978d:	8b 4c 24 28          	mov    0x28(%esp),%ecx
 8049791:	c7 01 45 72 72 6f    	movl   $0x6f727245,(%ecx)
 8049797:	c7 41 04 72 3a 20 43 	movl   $0x43203a72,0x4(%ecx)
 804979e:	c7 41 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%ecx)
 80497a5:	c7 41 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%ecx)
 80497ac:	c7 41 10 61 62 6c 65 	movl   $0x656c6261,0x10(%ecx)
 80497b3:	c7 41 14 20 74 6f 20 	movl   $0x206f7420,0x14(%ecx)
 80497ba:	c7 41 18 63 72 65 61 	movl   $0x61657263,0x18(%ecx)
 80497c1:	c7 41 1c 74 65 20 73 	movl   $0x73206574,0x1c(%ecx)
 80497c8:	c7 41 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%ecx)
 80497cf:	66 c7 41 24 74 00    	movw   $0x74,0x24(%ecx)
 80497d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80497da:	e9 e8 06 00 00       	jmp    8049ec7 <submitr+0x7ba>
 80497df:	89 1c 24             	mov    %ebx,(%esp)
 80497e2:	e8 49 f1 ff ff       	call   8048930 <gethostbyname@plt>
 80497e7:	85 c0                	test   %eax,%eax
 80497e9:	75 70                	jne    804985b <submitr+0x14e>
 80497eb:	8b 44 24 28          	mov    0x28(%esp),%eax
 80497ef:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80497f5:	c7 40 04 72 3a 20 44 	movl   $0x44203a72,0x4(%eax)
 80497fc:	c7 40 08 4e 53 20 69 	movl   $0x6920534e,0x8(%eax)
 8049803:	c7 40 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%eax)
 804980a:	c7 40 10 61 62 6c 65 	movl   $0x656c6261,0x10(%eax)
 8049811:	c7 40 14 20 74 6f 20 	movl   $0x206f7420,0x14(%eax)
 8049818:	c7 40 18 72 65 73 6f 	movl   $0x6f736572,0x18(%eax)
 804981f:	c7 40 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%eax)
 8049826:	c7 40 20 73 65 72 76 	movl   $0x76726573,0x20(%eax)
 804982d:	c7 40 24 65 72 20 61 	movl   $0x61207265,0x24(%eax)
 8049834:	c7 40 28 64 64 72 65 	movl   $0x65726464,0x28(%eax)
 804983b:	66 c7 40 2c 73 73    	movw   $0x7373,0x2c(%eax)
 8049841:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
 8049845:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049849:	89 04 24             	mov    %eax,(%esp)
 804984c:	e8 0f f1 ff ff       	call   8048960 <close@plt>
 8049851:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049856:	e9 6c 06 00 00       	jmp    8049ec7 <submitr+0x7ba>
 804985b:	8d 9c 24 54 a0 00 00 	lea    0xa054(%esp),%ebx
 8049862:	c7 84 24 54 a0 00 00 	movl   $0x0,0xa054(%esp)
 8049869:	00 00 00 00 
 804986d:	c7 84 24 58 a0 00 00 	movl   $0x0,0xa058(%esp)
 8049874:	00 00 00 00 
 8049878:	c7 84 24 5c a0 00 00 	movl   $0x0,0xa05c(%esp)
 804987f:	00 00 00 00 
 8049883:	c7 84 24 60 a0 00 00 	movl   $0x0,0xa060(%esp)
 804988a:	00 00 00 00 
 804988e:	66 c7 84 24 54 a0 00 	movw   $0x2,0xa054(%esp)
 8049895:	00 02 00 
 8049898:	c7 44 24 0c 0c 00 00 	movl   $0xc,0xc(%esp)
 804989f:	00 
 80498a0:	8b 50 0c             	mov    0xc(%eax),%edx
 80498a3:	89 54 24 08          	mov    %edx,0x8(%esp)
 80498a7:	8b 40 10             	mov    0x10(%eax),%eax
 80498aa:	8b 00                	mov    (%eax),%eax
 80498ac:	89 44 24 04          	mov    %eax,0x4(%esp)
 80498b0:	8d 84 24 58 a0 00 00 	lea    0xa058(%esp),%eax
 80498b7:	89 04 24             	mov    %eax,(%esp)
 80498ba:	e8 a1 ef ff ff       	call   8048860 <__memmove_chk@plt>
 80498bf:	0f b7 84 24 94 a0 00 	movzwl 0xa094(%esp),%eax
 80498c6:	00 
 80498c7:	66 c1 c8 08          	ror    $0x8,%ax
 80498cb:	66 89 84 24 56 a0 00 	mov    %ax,0xa056(%esp)
 80498d2:	00 
 80498d3:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 80498da:	00 
 80498db:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 80498df:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 80498e3:	89 04 24             	mov    %eax,(%esp)
 80498e6:	e8 65 f0 ff ff       	call   8048950 <connect@plt>
 80498eb:	85 c0                	test   %eax,%eax
 80498ed:	79 62                	jns    8049951 <submitr+0x244>
 80498ef:	8b 54 24 28          	mov    0x28(%esp),%edx
 80498f3:	c7 02 45 72 72 6f    	movl   $0x6f727245,(%edx)
 80498f9:	c7 42 04 72 3a 20 55 	movl   $0x55203a72,0x4(%edx)
 8049900:	c7 42 08 6e 61 62 6c 	movl   $0x6c62616e,0x8(%edx)
 8049907:	c7 42 0c 65 20 74 6f 	movl   $0x6f742065,0xc(%edx)
 804990e:	c7 42 10 20 63 6f 6e 	movl   $0x6e6f6320,0x10(%edx)
 8049915:	c7 42 14 6e 65 63 74 	movl   $0x7463656e,0x14(%edx)
 804991c:	c7 42 18 20 74 6f 20 	movl   $0x206f7420,0x18(%edx)
 8049923:	c7 42 1c 74 68 65 20 	movl   $0x20656874,0x1c(%edx)
 804992a:	c7 42 20 73 65 72 76 	movl   $0x76726573,0x20(%edx)
 8049931:	66 c7 42 24 65 72    	movw   $0x7265,0x24(%edx)
 8049937:	c6 42 26 00          	movb   $0x0,0x26(%edx)
 804993b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 804993f:	89 04 24             	mov    %eax,(%esp)
 8049942:	e8 19 f0 ff ff       	call   8048960 <close@plt>
 8049947:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804994c:	e9 76 05 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049951:	ba ff ff ff ff       	mov    $0xffffffff,%edx
 8049956:	89 ef                	mov    %ebp,%edi
 8049958:	b8 00 00 00 00       	mov    $0x0,%eax
 804995d:	89 d1                	mov    %edx,%ecx
 804995f:	f2 ae                	repnz scas %es:(%edi),%al
 8049961:	89 cb                	mov    %ecx,%ebx
 8049963:	f7 d3                	not    %ebx
 8049965:	8b 7c 24 30          	mov    0x30(%esp),%edi
 8049969:	89 d1                	mov    %edx,%ecx
 804996b:	f2 ae                	repnz scas %es:(%edi),%al
 804996d:	89 4c 24 3c          	mov    %ecx,0x3c(%esp)
 8049971:	8b 7c 24 34          	mov    0x34(%esp),%edi
 8049975:	89 d1                	mov    %edx,%ecx
 8049977:	f2 ae                	repnz scas %es:(%edi),%al
 8049979:	89 ce                	mov    %ecx,%esi
 804997b:	f7 d6                	not    %esi
 804997d:	8b 7c 24 38          	mov    0x38(%esp),%edi
 8049981:	89 d1                	mov    %edx,%ecx
 8049983:	f2 ae                	repnz scas %es:(%edi),%al
 8049985:	2b 74 24 3c          	sub    0x3c(%esp),%esi
 8049989:	29 ce                	sub    %ecx,%esi
 804998b:	8d 44 5b fd          	lea    -0x3(%ebx,%ebx,2),%eax
 804998f:	8d 44 06 7b          	lea    0x7b(%esi,%eax,1),%eax
 8049993:	3d 00 20 00 00       	cmp    $0x2000,%eax
 8049998:	76 7b                	jbe    8049a15 <submitr+0x308>
 804999a:	8b 44 24 28          	mov    0x28(%esp),%eax
 804999e:	c7 00 45 72 72 6f    	movl   $0x6f727245,(%eax)
 80499a4:	c7 40 04 72 3a 20 52 	movl   $0x52203a72,0x4(%eax)
 80499ab:	c7 40 08 65 73 75 6c 	movl   $0x6c757365,0x8(%eax)
 80499b2:	c7 40 0c 74 20 73 74 	movl   $0x74732074,0xc(%eax)
 80499b9:	c7 40 10 72 69 6e 67 	movl   $0x676e6972,0x10(%eax)
 80499c0:	c7 40 14 20 74 6f 6f 	movl   $0x6f6f7420,0x14(%eax)
 80499c7:	c7 40 18 20 6c 61 72 	movl   $0x72616c20,0x18(%eax)
 80499ce:	c7 40 1c 67 65 2e 20 	movl   $0x202e6567,0x1c(%eax)
 80499d5:	c7 40 20 49 6e 63 72 	movl   $0x72636e49,0x20(%eax)
 80499dc:	c7 40 24 65 61 73 65 	movl   $0x65736165,0x24(%eax)
 80499e3:	c7 40 28 20 53 55 42 	movl   $0x42555320,0x28(%eax)
 80499ea:	c7 40 2c 4d 49 54 52 	movl   $0x5254494d,0x2c(%eax)
 80499f1:	c7 40 30 5f 4d 41 58 	movl   $0x58414d5f,0x30(%eax)
 80499f8:	c7 40 34 42 55 46 00 	movl   $0x465542,0x34(%eax)
 80499ff:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049a03:	89 04 24             	mov    %eax,(%esp)
 8049a06:	e8 55 ef ff ff       	call   8048960 <close@plt>
 8049a0b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049a10:	e9 b2 04 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049a15:	8d 94 24 54 40 00 00 	lea    0x4054(%esp),%edx
 8049a1c:	b9 00 08 00 00       	mov    $0x800,%ecx
 8049a21:	b8 00 00 00 00       	mov    $0x0,%eax
 8049a26:	89 d7                	mov    %edx,%edi
 8049a28:	f3 ab                	rep stos %eax,%es:(%edi)
 8049a2a:	89 ef                	mov    %ebp,%edi
 8049a2c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049a31:	f2 ae                	repnz scas %es:(%edi),%al
 8049a33:	f7 d1                	not    %ecx
 8049a35:	89 ce                	mov    %ecx,%esi
 8049a37:	83 ee 01             	sub    $0x1,%esi
 8049a3a:	0f 84 99 04 00 00    	je     8049ed9 <submitr+0x7cc>
 8049a40:	89 d3                	mov    %edx,%ebx
 8049a42:	0f b6 45 00          	movzbl 0x0(%ebp),%eax
 8049a46:	3c 2a                	cmp    $0x2a,%al
 8049a48:	74 24                	je     8049a6e <submitr+0x361>
 8049a4a:	3c 2d                	cmp    $0x2d,%al
 8049a4c:	74 20                	je     8049a6e <submitr+0x361>
 8049a4e:	3c 2e                	cmp    $0x2e,%al
 8049a50:	74 1c                	je     8049a6e <submitr+0x361>
 8049a52:	3c 5f                	cmp    $0x5f,%al
 8049a54:	74 18                	je     8049a6e <submitr+0x361>
 8049a56:	8d 50 d0             	lea    -0x30(%eax),%edx
 8049a59:	80 fa 09             	cmp    $0x9,%dl
 8049a5c:	76 10                	jbe    8049a6e <submitr+0x361>
 8049a5e:	8d 50 bf             	lea    -0x41(%eax),%edx
 8049a61:	80 fa 19             	cmp    $0x19,%dl
 8049a64:	76 08                	jbe    8049a6e <submitr+0x361>
 8049a66:	8d 50 9f             	lea    -0x61(%eax),%edx
 8049a69:	80 fa 19             	cmp    $0x19,%dl
 8049a6c:	77 07                	ja     8049a75 <submitr+0x368>
 8049a6e:	88 03                	mov    %al,(%ebx)
 8049a70:	83 c3 01             	add    $0x1,%ebx
 8049a73:	eb 69                	jmp    8049ade <submitr+0x3d1>
 8049a75:	3c 20                	cmp    $0x20,%al
 8049a77:	75 08                	jne    8049a81 <submitr+0x374>
 8049a79:	c6 03 2b             	movb   $0x2b,(%ebx)
 8049a7c:	83 c3 01             	add    $0x1,%ebx
 8049a7f:	eb 5d                	jmp    8049ade <submitr+0x3d1>
 8049a81:	8d 50 e0             	lea    -0x20(%eax),%edx
 8049a84:	80 fa 5f             	cmp    $0x5f,%dl
 8049a87:	76 04                	jbe    8049a8d <submitr+0x380>
 8049a89:	3c 09                	cmp    $0x9,%al
 8049a8b:	75 62                	jne    8049aef <submitr+0x3e2>
 8049a8d:	0f b6 c0             	movzbl %al,%eax
 8049a90:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049a94:	c7 44 24 0c a8 a8 04 	movl   $0x804a8a8,0xc(%esp)
 8049a9b:	08 
 8049a9c:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
 8049aa3:	00 
 8049aa4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049aab:	00 
 8049aac:	8d 94 24 64 a0 00 00 	lea    0xa064(%esp),%edx
 8049ab3:	89 14 24             	mov    %edx,(%esp)
 8049ab6:	e8 c5 ee ff ff       	call   8048980 <__sprintf_chk@plt>
 8049abb:	0f b6 84 24 64 a0 00 	movzbl 0xa064(%esp),%eax
 8049ac2:	00 
 8049ac3:	88 03                	mov    %al,(%ebx)
 8049ac5:	0f b6 84 24 65 a0 00 	movzbl 0xa065(%esp),%eax
 8049acc:	00 
 8049acd:	88 43 01             	mov    %al,0x1(%ebx)
 8049ad0:	0f b6 84 24 66 a0 00 	movzbl 0xa066(%esp),%eax
 8049ad7:	00 
 8049ad8:	88 43 02             	mov    %al,0x2(%ebx)
 8049adb:	83 c3 03             	add    $0x3,%ebx
 8049ade:	83 c5 01             	add    $0x1,%ebp
 8049ae1:	83 ee 01             	sub    $0x1,%esi
 8049ae4:	0f 85 58 ff ff ff    	jne    8049a42 <submitr+0x335>
 8049aea:	e9 ea 03 00 00       	jmp    8049ed9 <submitr+0x7cc>
 8049aef:	8b 7c 24 28          	mov    0x28(%esp),%edi
 8049af3:	be c0 a7 04 08       	mov    $0x804a7c0,%esi
 8049af8:	b8 43 00 00 00       	mov    $0x43,%eax
 8049afd:	f7 c7 01 00 00 00    	test   $0x1,%edi
 8049b03:	74 1a                	je     8049b1f <submitr+0x412>
 8049b05:	0f b6 05 c0 a7 04 08 	movzbl 0x804a7c0,%eax
 8049b0c:	88 07                	mov    %al,(%edi)
 8049b0e:	8b 7c 24 28          	mov    0x28(%esp),%edi
 8049b12:	83 c7 01             	add    $0x1,%edi
 8049b15:	be c1 a7 04 08       	mov    $0x804a7c1,%esi
 8049b1a:	b8 42 00 00 00       	mov    $0x42,%eax
 8049b1f:	f7 c7 02 00 00 00    	test   $0x2,%edi
 8049b25:	74 0f                	je     8049b36 <submitr+0x429>
 8049b27:	0f b7 16             	movzwl (%esi),%edx
 8049b2a:	66 89 17             	mov    %dx,(%edi)
 8049b2d:	83 c7 02             	add    $0x2,%edi
 8049b30:	83 c6 02             	add    $0x2,%esi
 8049b33:	83 e8 02             	sub    $0x2,%eax
 8049b36:	89 c1                	mov    %eax,%ecx
 8049b38:	c1 e9 02             	shr    $0x2,%ecx
 8049b3b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
 8049b3d:	ba 00 00 00 00       	mov    $0x0,%edx
 8049b42:	a8 02                	test   $0x2,%al
 8049b44:	74 0b                	je     8049b51 <submitr+0x444>
 8049b46:	0f b7 16             	movzwl (%esi),%edx
 8049b49:	66 89 17             	mov    %dx,(%edi)
 8049b4c:	ba 02 00 00 00       	mov    $0x2,%edx
 8049b51:	a8 01                	test   $0x1,%al
 8049b53:	74 07                	je     8049b5c <submitr+0x44f>
 8049b55:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax
 8049b59:	88 04 17             	mov    %al,(%edi,%edx,1)
 8049b5c:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049b60:	89 04 24             	mov    %eax,(%esp)
 8049b63:	e8 f8 ed ff ff       	call   8048960 <close@plt>
 8049b68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049b6d:	e9 55 03 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049b72:	89 fd                	mov    %edi,%ebp
 8049b74:	8b 7c 24 2c          	mov    0x2c(%esp),%edi
 8049b78:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 8049b7c:	89 74 24 04          	mov    %esi,0x4(%esp)
 8049b80:	89 3c 24             	mov    %edi,(%esp)
 8049b83:	e8 28 ed ff ff       	call   80488b0 <write@plt>
 8049b88:	85 c0                	test   %eax,%eax
 8049b8a:	7f 0f                	jg     8049b9b <submitr+0x48e>
 8049b8c:	e8 5f ed ff ff       	call   80488f0 <__errno_location@plt>
 8049b91:	83 38 04             	cmpl   $0x4,(%eax)
 8049b94:	75 0f                	jne    8049ba5 <submitr+0x498>
 8049b96:	b8 00 00 00 00       	mov    $0x0,%eax
 8049b9b:	01 c6                	add    %eax,%esi
 8049b9d:	29 c3                	sub    %eax,%ebx
 8049b9f:	75 d7                	jne    8049b78 <submitr+0x46b>
 8049ba1:	85 ed                	test   %ebp,%ebp
 8049ba3:	79 66                	jns    8049c0b <submitr+0x4fe>
 8049ba5:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049ba9:	c7 02 45 72 72 6f    	movl   $0x6f727245,(%edx)
 8049baf:	c7 42 04 72 3a 20 43 	movl   $0x43203a72,0x4(%edx)
 8049bb6:	c7 42 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%edx)
 8049bbd:	c7 42 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%edx)
 8049bc4:	c7 42 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edx)
 8049bcb:	c7 42 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edx)
 8049bd2:	c7 42 18 77 72 69 74 	movl   $0x74697277,0x18(%edx)
 8049bd9:	c7 42 1c 65 20 74 6f 	movl   $0x6f742065,0x1c(%edx)
 8049be0:	c7 42 20 20 74 68 65 	movl   $0x65687420,0x20(%edx)
 8049be7:	c7 42 24 20 73 65 72 	movl   $0x72657320,0x24(%edx)
 8049bee:	c7 42 28 76 65 72 00 	movl   $0x726576,0x28(%edx)
 8049bf5:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049bf9:	89 04 24             	mov    %eax,(%esp)
 8049bfc:	e8 5f ed ff ff       	call   8048960 <close@plt>
 8049c01:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049c06:	e9 bc 02 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049c0b:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049c0f:	89 44 24 48          	mov    %eax,0x48(%esp)
 8049c13:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%esp)
 8049c1a:	00 
 8049c1b:	8d 44 24 54          	lea    0x54(%esp),%eax
 8049c1f:	89 44 24 50          	mov    %eax,0x50(%esp)
 8049c23:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049c28:	8d 94 24 54 20 00 00 	lea    0x2054(%esp),%edx
 8049c2f:	8d 44 24 48          	lea    0x48(%esp),%eax
 8049c33:	e8 88 f9 ff ff       	call   80495c0 <rio_readlineb>
 8049c38:	85 c0                	test   %eax,%eax
 8049c3a:	7f 7a                	jg     8049cb6 <submitr+0x5a9>
 8049c3c:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049c40:	c7 02 45 72 72 6f    	movl   $0x6f727245,(%edx)
 8049c46:	c7 42 04 72 3a 20 43 	movl   $0x43203a72,0x4(%edx)
 8049c4d:	c7 42 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%edx)
 8049c54:	c7 42 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%edx)
 8049c5b:	c7 42 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edx)
 8049c62:	c7 42 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edx)
 8049c69:	c7 42 18 72 65 61 64 	movl   $0x64616572,0x18(%edx)
 8049c70:	c7 42 1c 20 66 69 72 	movl   $0x72696620,0x1c(%edx)
 8049c77:	c7 42 20 73 74 20 68 	movl   $0x68207473,0x20(%edx)
 8049c7e:	c7 42 24 65 61 64 65 	movl   $0x65646165,0x24(%edx)
 8049c85:	c7 42 28 72 20 66 72 	movl   $0x72662072,0x28(%edx)
 8049c8c:	c7 42 2c 6f 6d 20 73 	movl   $0x73206d6f,0x2c(%edx)
 8049c93:	c7 42 30 65 72 76 65 	movl   $0x65767265,0x30(%edx)
 8049c9a:	66 c7 42 34 72 00    	movw   $0x72,0x34(%edx)
 8049ca0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049ca4:	89 04 24             	mov    %eax,(%esp)
 8049ca7:	e8 b4 ec ff ff       	call   8048960 <close@plt>
 8049cac:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049cb1:	e9 11 02 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049cb6:	8d 84 24 54 80 00 00 	lea    0x8054(%esp),%eax
 8049cbd:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049cc1:	8d 44 24 44          	lea    0x44(%esp),%eax
 8049cc5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049cc9:	8d 84 24 54 60 00 00 	lea    0x6054(%esp),%eax
 8049cd0:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049cd4:	c7 44 24 04 af a8 04 	movl   $0x804a8af,0x4(%esp)
 8049cdb:	08 
 8049cdc:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049ce3:	89 04 24             	mov    %eax,(%esp)
 8049ce6:	e8 e5 eb ff ff       	call   80488d0 <__isoc99_sscanf@plt>
 8049ceb:	8b 44 24 44          	mov    0x44(%esp),%eax
 8049cef:	3d c8 00 00 00       	cmp    $0xc8,%eax
 8049cf4:	0f 84 d3 00 00 00    	je     8049dcd <submitr+0x6c0>
 8049cfa:	8d 94 24 54 80 00 00 	lea    0x8054(%esp),%edx
 8049d01:	89 54 24 14          	mov    %edx,0x14(%esp)
 8049d05:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049d09:	c7 44 24 0c 04 a8 04 	movl   $0x804a804,0xc(%esp)
 8049d10:	08 
 8049d11:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
 8049d18:	ff 
 8049d19:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049d20:	00 
 8049d21:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049d25:	89 14 24             	mov    %edx,(%esp)
 8049d28:	e8 53 ec ff ff       	call   8048980 <__sprintf_chk@plt>
 8049d2d:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049d31:	89 04 24             	mov    %eax,(%esp)
 8049d34:	e8 27 ec ff ff       	call   8048960 <close@plt>
 8049d39:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049d3e:	e9 84 01 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049d43:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049d48:	8d 94 24 54 20 00 00 	lea    0x2054(%esp),%edx
 8049d4f:	8d 44 24 48          	lea    0x48(%esp),%eax
 8049d53:	e8 68 f8 ff ff       	call   80495c0 <rio_readlineb>
 8049d58:	85 c0                	test   %eax,%eax
 8049d5a:	7f 71                	jg     8049dcd <submitr+0x6c0>
 8049d5c:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049d60:	c7 02 45 72 72 6f    	movl   $0x6f727245,(%edx)
 8049d66:	c7 42 04 72 3a 20 43 	movl   $0x43203a72,0x4(%edx)
 8049d6d:	c7 42 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%edx)
 8049d74:	c7 42 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%edx)
 8049d7b:	c7 42 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edx)
 8049d82:	c7 42 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edx)
 8049d89:	c7 42 18 72 65 61 64 	movl   $0x64616572,0x18(%edx)
 8049d90:	c7 42 1c 20 68 65 61 	movl   $0x61656820,0x1c(%edx)
 8049d97:	c7 42 20 64 65 72 73 	movl   $0x73726564,0x20(%edx)
 8049d9e:	c7 42 24 20 66 72 6f 	movl   $0x6f726620,0x24(%edx)
 8049da5:	c7 42 28 6d 20 73 65 	movl   $0x6573206d,0x28(%edx)
 8049dac:	c7 42 2c 72 76 65 72 	movl   $0x72657672,0x2c(%edx)
 8049db3:	c6 42 30 00          	movb   $0x0,0x30(%edx)
 8049db7:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049dbb:	89 04 24             	mov    %eax,(%esp)
 8049dbe:	e8 9d eb ff ff       	call   8048960 <close@plt>
 8049dc3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049dc8:	e9 fa 00 00 00       	jmp    8049ec7 <submitr+0x7ba>
 8049dcd:	80 bc 24 54 20 00 00 	cmpb   $0xd,0x2054(%esp)
 8049dd4:	0d 
 8049dd5:	0f 85 68 ff ff ff    	jne    8049d43 <submitr+0x636>
 8049ddb:	80 bc 24 55 20 00 00 	cmpb   $0xa,0x2055(%esp)
 8049de2:	0a 
 8049de3:	0f 85 5a ff ff ff    	jne    8049d43 <submitr+0x636>
 8049de9:	80 bc 24 56 20 00 00 	cmpb   $0x0,0x2056(%esp)
 8049df0:	00 
 8049df1:	0f 85 4c ff ff ff    	jne    8049d43 <submitr+0x636>
 8049df7:	b9 00 20 00 00       	mov    $0x2000,%ecx
 8049dfc:	8d 94 24 54 20 00 00 	lea    0x2054(%esp),%edx
 8049e03:	8d 44 24 48          	lea    0x48(%esp),%eax
 8049e07:	e8 b4 f7 ff ff       	call   80495c0 <rio_readlineb>
 8049e0c:	85 c0                	test   %eax,%eax
 8049e0e:	7f 78                	jg     8049e88 <submitr+0x77b>
 8049e10:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049e14:	c7 02 45 72 72 6f    	movl   $0x6f727245,(%edx)
 8049e1a:	c7 42 04 72 3a 20 43 	movl   $0x43203a72,0x4(%edx)
 8049e21:	c7 42 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%edx)
 8049e28:	c7 42 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%edx)
 8049e2f:	c7 42 10 61 62 6c 65 	movl   $0x656c6261,0x10(%edx)
 8049e36:	c7 42 14 20 74 6f 20 	movl   $0x206f7420,0x14(%edx)
 8049e3d:	c7 42 18 72 65 61 64 	movl   $0x64616572,0x18(%edx)
 8049e44:	c7 42 1c 20 73 74 61 	movl   $0x61747320,0x1c(%edx)
 8049e4b:	c7 42 20 74 75 73 20 	movl   $0x20737574,0x20(%edx)
 8049e52:	c7 42 24 6d 65 73 73 	movl   $0x7373656d,0x24(%edx)
 8049e59:	c7 42 28 61 67 65 20 	movl   $0x20656761,0x28(%edx)
 8049e60:	c7 42 2c 66 72 6f 6d 	movl   $0x6d6f7266,0x2c(%edx)
 8049e67:	c7 42 30 20 73 65 72 	movl   $0x72657320,0x30(%edx)
 8049e6e:	c7 42 34 76 65 72 00 	movl   $0x726576,0x34(%edx)
 8049e75:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049e79:	89 04 24             	mov    %eax,(%esp)
 8049e7c:	e8 df ea ff ff       	call   8048960 <close@plt>
 8049e81:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e86:	eb 3f                	jmp    8049ec7 <submitr+0x7ba>
 8049e88:	8d 84 24 54 20 00 00 	lea    0x2054(%esp),%eax
 8049e8f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049e93:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049e97:	89 14 24             	mov    %edx,(%esp)
 8049e9a:	e8 81 e9 ff ff       	call   8048820 <strcpy@plt>
 8049e9f:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 8049ea3:	89 04 24             	mov    %eax,(%esp)
 8049ea6:	e8 b5 ea ff ff       	call   8048960 <close@plt>
 8049eab:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049eb0:	8b 54 24 28          	mov    0x28(%esp),%edx
 8049eb4:	80 3a 4f             	cmpb   $0x4f,(%edx)
 8049eb7:	75 0e                	jne    8049ec7 <submitr+0x7ba>
 8049eb9:	80 7a 01 4b          	cmpb   $0x4b,0x1(%edx)
 8049ebd:	75 08                	jne    8049ec7 <submitr+0x7ba>
 8049ebf:	80 7a 02 01          	cmpb   $0x1,0x2(%edx)
 8049ec3:	19 c0                	sbb    %eax,%eax
 8049ec5:	f7 d0                	not    %eax
 8049ec7:	8b 8c 24 6c a0 00 00 	mov    0xa06c(%esp),%ecx
 8049ece:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8049ed5:	74 78                	je     8049f4f <submitr+0x842>
 8049ed7:	eb 71                	jmp    8049f4a <submitr+0x83d>
 8049ed9:	8d 84 24 54 40 00 00 	lea    0x4054(%esp),%eax
 8049ee0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8049ee4:	8b 44 24 38          	mov    0x38(%esp),%eax
 8049ee8:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049eec:	8b 54 24 34          	mov    0x34(%esp),%edx
 8049ef0:	89 54 24 14          	mov    %edx,0x14(%esp)
 8049ef4:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 8049ef8:	89 4c 24 10          	mov    %ecx,0x10(%esp)
 8049efc:	c7 44 24 0c 34 a8 04 	movl   $0x804a834,0xc(%esp)
 8049f03:	08 
 8049f04:	c7 44 24 08 00 20 00 	movl   $0x2000,0x8(%esp)
 8049f0b:	00 
 8049f0c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049f13:	00 
 8049f14:	8d bc 24 54 20 00 00 	lea    0x2054(%esp),%edi
 8049f1b:	89 3c 24             	mov    %edi,(%esp)
 8049f1e:	e8 5d ea ff ff       	call   8048980 <__sprintf_chk@plt>
 8049f23:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f28:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
 8049f2d:	f2 ae                	repnz scas %es:(%edi),%al
 8049f2f:	f7 d1                	not    %ecx
 8049f31:	8d 79 ff             	lea    -0x1(%ecx),%edi
 8049f34:	89 fb                	mov    %edi,%ebx
 8049f36:	8d b4 24 54 20 00 00 	lea    0x2054(%esp),%esi
 8049f3d:	85 ff                	test   %edi,%edi
 8049f3f:	0f 85 2d fc ff ff    	jne    8049b72 <submitr+0x465>
 8049f45:	e9 c1 fc ff ff       	jmp    8049c0b <submitr+0x4fe>
 8049f4a:	e8 c1 e8 ff ff       	call   8048810 <__stack_chk_fail@plt>
 8049f4f:	81 c4 7c a0 00 00    	add    $0xa07c,%esp
 8049f55:	5b                   	pop    %ebx
 8049f56:	5e                   	pop    %esi
 8049f57:	5f                   	pop    %edi
 8049f58:	5d                   	pop    %ebp
 8049f59:	c3                   	ret    

08049f5a <init_timeout>:
 8049f5a:	53                   	push   %ebx
 8049f5b:	83 ec 18             	sub    $0x18,%esp
 8049f5e:	8b 5c 24 20          	mov    0x20(%esp),%ebx
 8049f62:	85 db                	test   %ebx,%ebx
 8049f64:	74 26                	je     8049f8c <init_timeout+0x32>
 8049f66:	c7 44 24 04 d9 96 04 	movl   $0x80496d9,0x4(%esp)
 8049f6d:	08 
 8049f6e:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)
 8049f75:	e8 66 e8 ff ff       	call   80487e0 <signal@plt>
 8049f7a:	85 db                	test   %ebx,%ebx
 8049f7c:	b8 00 00 00 00       	mov    $0x0,%eax
 8049f81:	0f 48 d8             	cmovs  %eax,%ebx
 8049f84:	89 1c 24             	mov    %ebx,(%esp)
 8049f87:	e8 74 e8 ff ff       	call   8048800 <alarm@plt>
 8049f8c:	83 c4 18             	add    $0x18,%esp
 8049f8f:	5b                   	pop    %ebx
 8049f90:	c3                   	ret    

08049f91 <init_driver>:
 8049f91:	57                   	push   %edi
 8049f92:	56                   	push   %esi
 8049f93:	53                   	push   %ebx
 8049f94:	83 ec 40             	sub    $0x40,%esp
 8049f97:	8b 74 24 50          	mov    0x50(%esp),%esi
 8049f9b:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8049fa1:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 8049fa5:	31 c0                	xor    %eax,%eax
 8049fa7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049fae:	00 
 8049faf:	c7 04 24 0d 00 00 00 	movl   $0xd,(%esp)
 8049fb6:	e8 25 e8 ff ff       	call   80487e0 <signal@plt>
 8049fbb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049fc2:	00 
 8049fc3:	c7 04 24 1d 00 00 00 	movl   $0x1d,(%esp)
 8049fca:	e8 11 e8 ff ff       	call   80487e0 <signal@plt>
 8049fcf:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049fd6:	00 
 8049fd7:	c7 04 24 1d 00 00 00 	movl   $0x1d,(%esp)
 8049fde:	e8 fd e7 ff ff       	call   80487e0 <signal@plt>
 8049fe3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049fea:	00 
 8049feb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 8049ff2:	00 
 8049ff3:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
 8049ffa:	e8 11 e9 ff ff       	call   8048910 <socket@plt>
 8049fff:	89 c3                	mov    %eax,%ebx
 804a001:	85 c0                	test   %eax,%eax
 804a003:	79 4e                	jns    804a053 <init_driver+0xc2>
 804a005:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 804a00b:	c7 46 04 72 3a 20 43 	movl   $0x43203a72,0x4(%esi)
 804a012:	c7 46 08 6c 69 65 6e 	movl   $0x6e65696c,0x8(%esi)
 804a019:	c7 46 0c 74 20 75 6e 	movl   $0x6e752074,0xc(%esi)
 804a020:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 804a027:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 804a02e:	c7 46 18 63 72 65 61 	movl   $0x61657263,0x18(%esi)
 804a035:	c7 46 1c 74 65 20 73 	movl   $0x73206574,0x1c(%esi)
 804a03c:	c7 46 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%esi)
 804a043:	66 c7 46 24 74 00    	movw   $0x74,0x24(%esi)
 804a049:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a04e:	e9 33 01 00 00       	jmp    804a186 <init_driver+0x1f5>
 804a053:	c7 04 24 c0 a8 04 08 	movl   $0x804a8c0,(%esp)
 804a05a:	e8 d1 e8 ff ff       	call   8048930 <gethostbyname@plt>
 804a05f:	85 c0                	test   %eax,%eax
 804a061:	75 68                	jne    804a0cb <init_driver+0x13a>
 804a063:	c7 06 45 72 72 6f    	movl   $0x6f727245,(%esi)
 804a069:	c7 46 04 72 3a 20 44 	movl   $0x44203a72,0x4(%esi)
 804a070:	c7 46 08 4e 53 20 69 	movl   $0x6920534e,0x8(%esi)
 804a077:	c7 46 0c 73 20 75 6e 	movl   $0x6e752073,0xc(%esi)
 804a07e:	c7 46 10 61 62 6c 65 	movl   $0x656c6261,0x10(%esi)
 804a085:	c7 46 14 20 74 6f 20 	movl   $0x206f7420,0x14(%esi)
 804a08c:	c7 46 18 72 65 73 6f 	movl   $0x6f736572,0x18(%esi)
 804a093:	c7 46 1c 6c 76 65 20 	movl   $0x2065766c,0x1c(%esi)
 804a09a:	c7 46 20 73 65 72 76 	movl   $0x76726573,0x20(%esi)
 804a0a1:	c7 46 24 65 72 20 61 	movl   $0x61207265,0x24(%esi)
 804a0a8:	c7 46 28 64 64 72 65 	movl   $0x65726464,0x28(%esi)
 804a0af:	66 c7 46 2c 73 73    	movw   $0x7373,0x2c(%esi)
 804a0b5:	c6 46 2e 00          	movb   $0x0,0x2e(%esi)
 804a0b9:	89 1c 24             	mov    %ebx,(%esp)
 804a0bc:	e8 9f e8 ff ff       	call   8048960 <close@plt>
 804a0c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a0c6:	e9 bb 00 00 00       	jmp    804a186 <init_driver+0x1f5>
 804a0cb:	8d 7c 24 2c          	lea    0x2c(%esp),%edi
 804a0cf:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 804a0d6:	00 
 804a0d7:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%esp)
 804a0de:	00 
 804a0df:	c7 44 24 34 00 00 00 	movl   $0x0,0x34(%esp)
 804a0e6:	00 
 804a0e7:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%esp)
 804a0ee:	00 
 804a0ef:	66 c7 44 24 2c 02 00 	movw   $0x2,0x2c(%esp)
 804a0f6:	c7 44 24 0c 0c 00 00 	movl   $0xc,0xc(%esp)
 804a0fd:	00 
 804a0fe:	8b 50 0c             	mov    0xc(%eax),%edx
 804a101:	89 54 24 08          	mov    %edx,0x8(%esp)
 804a105:	8b 40 10             	mov    0x10(%eax),%eax
 804a108:	8b 00                	mov    (%eax),%eax
 804a10a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a10e:	8d 44 24 30          	lea    0x30(%esp),%eax
 804a112:	89 04 24             	mov    %eax,(%esp)
 804a115:	e8 46 e7 ff ff       	call   8048860 <__memmove_chk@plt>
 804a11a:	66 c7 44 24 2e 3b 6e 	movw   $0x6e3b,0x2e(%esp)
 804a121:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 804a128:	00 
 804a129:	89 7c 24 04          	mov    %edi,0x4(%esp)
 804a12d:	89 1c 24             	mov    %ebx,(%esp)
 804a130:	e8 1b e8 ff ff       	call   8048950 <connect@plt>
 804a135:	85 c0                	test   %eax,%eax
 804a137:	79 37                	jns    804a170 <init_driver+0x1df>
 804a139:	c7 44 24 10 c0 a8 04 	movl   $0x804a8c0,0x10(%esp)
 804a140:	08 
 804a141:	c7 44 24 0c 80 a8 04 	movl   $0x804a880,0xc(%esp)
 804a148:	08 
 804a149:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
 804a150:	ff 
 804a151:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804a158:	00 
 804a159:	89 34 24             	mov    %esi,(%esp)
 804a15c:	e8 1f e8 ff ff       	call   8048980 <__sprintf_chk@plt>
 804a161:	89 1c 24             	mov    %ebx,(%esp)
 804a164:	e8 f7 e7 ff ff       	call   8048960 <close@plt>
 804a169:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 804a16e:	eb 16                	jmp    804a186 <init_driver+0x1f5>
 804a170:	89 1c 24             	mov    %ebx,(%esp)
 804a173:	e8 e8 e7 ff ff       	call   8048960 <close@plt>
 804a178:	66 c7 06 4f 4b       	movw   $0x4b4f,(%esi)
 804a17d:	c6 46 02 00          	movb   $0x0,0x2(%esi)
 804a181:	b8 00 00 00 00       	mov    $0x0,%eax
 804a186:	8b 54 24 3c          	mov    0x3c(%esp),%edx
 804a18a:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804a191:	74 05                	je     804a198 <init_driver+0x207>
 804a193:	e8 78 e6 ff ff       	call   8048810 <__stack_chk_fail@plt>
 804a198:	83 c4 40             	add    $0x40,%esp
 804a19b:	5b                   	pop    %ebx
 804a19c:	5e                   	pop    %esi
 804a19d:	5f                   	pop    %edi
 804a19e:	c3                   	ret    

0804a19f <driver_post>:
 804a19f:	53                   	push   %ebx
 804a1a0:	83 ec 28             	sub    $0x28,%esp
 804a1a3:	8b 44 24 30          	mov    0x30(%esp),%eax
 804a1a7:	8b 54 24 34          	mov    0x34(%esp),%edx
 804a1ab:	8b 5c 24 3c          	mov    0x3c(%esp),%ebx
 804a1af:	83 7c 24 38 00       	cmpl   $0x0,0x38(%esp)
 804a1b4:	74 28                	je     804a1de <driver_post+0x3f>
 804a1b6:	89 54 24 08          	mov    %edx,0x8(%esp)
 804a1ba:	c7 44 24 04 d1 a8 04 	movl   $0x804a8d1,0x4(%esp)
 804a1c1:	08 
 804a1c2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804a1c9:	e8 32 e7 ff ff       	call   8048900 <__printf_chk@plt>
 804a1ce:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a1d3:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a1d7:	b8 00 00 00 00       	mov    $0x0,%eax
 804a1dc:	eb 49                	jmp    804a227 <driver_post+0x88>
 804a1de:	85 c0                	test   %eax,%eax
 804a1e0:	74 37                	je     804a219 <driver_post+0x7a>
 804a1e2:	80 38 00             	cmpb   $0x0,(%eax)
 804a1e5:	74 32                	je     804a219 <driver_post+0x7a>
 804a1e7:	89 5c 24 18          	mov    %ebx,0x18(%esp)
 804a1eb:	89 54 24 14          	mov    %edx,0x14(%esp)
 804a1ef:	c7 44 24 10 e8 a8 04 	movl   $0x804a8e8,0x10(%esp)
 804a1f6:	08 
 804a1f7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804a1fb:	c7 44 24 08 ec a8 04 	movl   $0x804a8ec,0x8(%esp)
 804a202:	08 
 804a203:	c7 44 24 04 6e 3b 00 	movl   $0x3b6e,0x4(%esp)
 804a20a:	00 
 804a20b:	c7 04 24 c0 a8 04 08 	movl   $0x804a8c0,(%esp)
 804a212:	e8 f6 f4 ff ff       	call   804970d <submitr>
 804a217:	eb 0e                	jmp    804a227 <driver_post+0x88>
 804a219:	66 c7 03 4f 4b       	movw   $0x4b4f,(%ebx)
 804a21e:	c6 43 02 00          	movb   $0x0,0x2(%ebx)
 804a222:	b8 00 00 00 00       	mov    $0x0,%eax
 804a227:	83 c4 28             	add    $0x28,%esp
 804a22a:	5b                   	pop    %ebx
 804a22b:	c3                   	ret    
 804a22c:	90                   	nop
 804a22d:	90                   	nop
 804a22e:	90                   	nop
 804a22f:	90                   	nop

0804a230 <__libc_csu_init>:
 804a230:	55                   	push   %ebp
 804a231:	57                   	push   %edi
 804a232:	56                   	push   %esi
 804a233:	53                   	push   %ebx
 804a234:	e8 69 00 00 00       	call   804a2a2 <__i686.get_pc_thunk.bx>
 804a239:	81 c3 bb 1d 00 00    	add    $0x1dbb,%ebx
 804a23f:	83 ec 1c             	sub    $0x1c,%esp
 804a242:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 804a246:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804a24c:	e8 1f e5 ff ff       	call   8048770 <_init>
 804a251:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 804a257:	29 c7                	sub    %eax,%edi
 804a259:	c1 ff 02             	sar    $0x2,%edi
 804a25c:	85 ff                	test   %edi,%edi
 804a25e:	74 29                	je     804a289 <__libc_csu_init+0x59>
 804a260:	31 f6                	xor    %esi,%esi
 804a262:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804a268:	8b 44 24 38          	mov    0x38(%esp),%eax
 804a26c:	89 2c 24             	mov    %ebp,(%esp)
 804a26f:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a273:	8b 44 24 34          	mov    0x34(%esp),%eax
 804a277:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a27b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 804a282:	83 c6 01             	add    $0x1,%esi
 804a285:	39 fe                	cmp    %edi,%esi
 804a287:	75 df                	jne    804a268 <__libc_csu_init+0x38>
 804a289:	83 c4 1c             	add    $0x1c,%esp
 804a28c:	5b                   	pop    %ebx
 804a28d:	5e                   	pop    %esi
 804a28e:	5f                   	pop    %edi
 804a28f:	5d                   	pop    %ebp
 804a290:	c3                   	ret    
 804a291:	eb 0d                	jmp    804a2a0 <__libc_csu_fini>
 804a293:	90                   	nop
 804a294:	90                   	nop
 804a295:	90                   	nop
 804a296:	90                   	nop
 804a297:	90                   	nop
 804a298:	90                   	nop
 804a299:	90                   	nop
 804a29a:	90                   	nop
 804a29b:	90                   	nop
 804a29c:	90                   	nop
 804a29d:	90                   	nop
 804a29e:	90                   	nop
 804a29f:	90                   	nop

0804a2a0 <__libc_csu_fini>:
 804a2a0:	f3 c3                	repz ret 

0804a2a2 <__i686.get_pc_thunk.bx>:
 804a2a2:	8b 1c 24             	mov    (%esp),%ebx
 804a2a5:	c3                   	ret    
 804a2a6:	90                   	nop
 804a2a7:	90                   	nop
 804a2a8:	90                   	nop
 804a2a9:	90                   	nop
 804a2aa:	90                   	nop
 804a2ab:	90                   	nop
 804a2ac:	90                   	nop
 804a2ad:	90                   	nop
 804a2ae:	90                   	nop
 804a2af:	90                   	nop

0804a2b0 <__do_global_ctors_aux>:
 804a2b0:	55                   	push   %ebp
 804a2b1:	89 e5                	mov    %esp,%ebp
 804a2b3:	53                   	push   %ebx
 804a2b4:	83 ec 04             	sub    $0x4,%esp
 804a2b7:	a1 14 bf 04 08       	mov    0x804bf14,%eax
 804a2bc:	83 f8 ff             	cmp    $0xffffffff,%eax
 804a2bf:	74 13                	je     804a2d4 <__do_global_ctors_aux+0x24>
 804a2c1:	bb 14 bf 04 08       	mov    $0x804bf14,%ebx
 804a2c6:	66 90                	xchg   %ax,%ax
 804a2c8:	83 eb 04             	sub    $0x4,%ebx
 804a2cb:	ff d0                	call   *%eax
 804a2cd:	8b 03                	mov    (%ebx),%eax
 804a2cf:	83 f8 ff             	cmp    $0xffffffff,%eax
 804a2d2:	75 f4                	jne    804a2c8 <__do_global_ctors_aux+0x18>
 804a2d4:	83 c4 04             	add    $0x4,%esp
 804a2d7:	5b                   	pop    %ebx
 804a2d8:	5d                   	pop    %ebp
 804a2d9:	c3                   	ret    
 804a2da:	90                   	nop
 804a2db:	90                   	nop

Disassembly of section .fini:

0804a2dc <_fini>:
 804a2dc:	53                   	push   %ebx
 804a2dd:	83 ec 08             	sub    $0x8,%esp
 804a2e0:	e8 00 00 00 00       	call   804a2e5 <_fini+0x9>
 804a2e5:	5b                   	pop    %ebx
 804a2e6:	81 c3 0f 1d 00 00    	add    $0x1d0f,%ebx
 804a2ec:	e8 cf e6 ff ff       	call   80489c0 <__do_global_dtors_aux>
 804a2f1:	83 c4 08             	add    $0x8,%esp
 804a2f4:	5b                   	pop    %ebx
 804a2f5:	c3                   	ret    
